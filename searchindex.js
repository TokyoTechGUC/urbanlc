Search.setIndex({"docnames": ["_autosummary/urbanlc", "_autosummary/urbanlc.analyze", "_autosummary/urbanlc.analyze.constant", "_autosummary/urbanlc.analyze.evaluate", "_autosummary/urbanlc.analyze.metrics", "_autosummary/urbanlc.analyze.visualizer", "_autosummary/urbanlc.downloader", "_autosummary/urbanlc.downloader.base", "_autosummary/urbanlc.downloader.downloader_constant", "_autosummary/urbanlc.downloader.esa2021_downloader", "_autosummary/urbanlc.downloader.general", "_autosummary/urbanlc.downloader.landsat_downloader", "_autosummary/urbanlc.downloader.logger", "_autosummary/urbanlc.model", "_autosummary/urbanlc.model.base", "_autosummary/urbanlc.model.baseline", "_autosummary/urbanlc.model.dataloader", "_autosummary/urbanlc.model.deep_learning", "_autosummary/urbanlc.model.download", "_autosummary/urbanlc.model.pipeline_transforms", "_autosummary/urbanlc.model.train_utils", "_autosummary/urbanlc.utils", "api", "citation", "generated/urbanlc.analyze.metrics", "generated/urbanlc.analyze.metrics.accuracy", "generated/urbanlc.analyze.metrics.cohen_kappa", "generated/urbanlc.analyze.metrics.confusion_matrix", "generated/urbanlc.analyze.metrics.get_class_distribution", "generated/urbanlc.analyze.metrics.producer_accuracy", "generated/urbanlc.analyze.metrics.user_accuracy", "generated/urbanlc.analyze.visualizer", "generated/urbanlc.analyze.visualizer.get_esa_colormap", "generated/urbanlc.analyze.visualizer.plot_change", "generated/urbanlc.analyze.visualizer.plot_class_distribution", "generated/urbanlc.analyze.visualizer.plot_land_cover", "generated/urbanlc.analyze.visualizer.plot_landsat", "generated/urbanlc.analyze.visualizer.show_esa_label", "generated/urbanlc.analyze.visualizer.visualize_data_batch", "generated/urbanlc.downloader.base", "generated/urbanlc.downloader.base.BaseDownloader", "generated/urbanlc.downloader.base.BaseDownloader.download_image", "generated/urbanlc.downloader.base.BaseDownloader.download_images", "generated/urbanlc.downloader.base.BaseDownloader.get_spatial_filter", "generated/urbanlc.downloader.base.BaseDownloader.merge_patches", "generated/urbanlc.downloader.base.BaseDownloader.remove_cache", "generated/urbanlc.downloader.base.BaseDownloader.set_root", "generated/urbanlc.downloader.base.BoundingBox", "generated/urbanlc.downloader.base.BoundingBox.bounds", "generated/urbanlc.downloader.base.BoundingBox.from_bounds", "generated/urbanlc.downloader.base.BoundingBox.from_point", "generated/urbanlc.downloader.base.BoundingBox.get_partition", "generated/urbanlc.downloader.base.BoundingBox.region", "generated/urbanlc.downloader.esa2021_downloader", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.download_image", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.download_images", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.get_spatial_filter", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.initialize", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.merge_patches", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.remove_cache", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.set_root", "generated/urbanlc.downloader.landsat_downloader", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.apply_scale_factors", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.download_image", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.download_images", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.get_spatial_filter", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.initialize", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.mask_clouds", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.merge_patches", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.remove_cache", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.retrieve_image", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.set_root", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.apply_scale_factors", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.download_image", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.download_images", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.get_spatial_filter", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.initialize", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.mask_clouds", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.merge_patches", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.remove_cache", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.retrieve_image", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.set_root", "generated/urbanlc.downloader.landsat_downloader.LandsatTM", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.apply_scale_factors", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.download_image", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.download_images", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.get_spatial_filter", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.initialize", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.mask_clouds", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.merge_patches", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.remove_cache", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.retrieve_image", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.set_root", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.apply_scale_factors", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.download_image", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.download_images", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.get_spatial_filter", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.mask_clouds", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.merge_patches", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.remove_cache", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.retrieve_image", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.set_root", "generated/urbanlc.model.base", "generated/urbanlc.model.base.LCC", "generated/urbanlc.model.base.LCC.construct_transform_map", "generated/urbanlc.model.base.LCC.infer", "generated/urbanlc.model.base.LCC.load_model", "generated/urbanlc.model.base.LCC.save_model", "generated/urbanlc.model.base.LCC.train", "generated/urbanlc.model.base.LCC.validate", "generated/urbanlc.model.baseline", "generated/urbanlc.model.baseline.BaselineLCC", "generated/urbanlc.model.baseline.BaselineLCC.build_model", "generated/urbanlc.model.baseline.BaselineLCC.construct_transform_map", "generated/urbanlc.model.baseline.BaselineLCC.infer", "generated/urbanlc.model.baseline.BaselineLCC.load_model", "generated/urbanlc.model.baseline.BaselineLCC.retrieve_images", "generated/urbanlc.model.baseline.BaselineLCC.save_model", "generated/urbanlc.model.baseline.BaselineLCC.train", "generated/urbanlc.model.baseline.BaselineLCC.transform_pipeline", "generated/urbanlc.model.baseline.BaselineLCC.update_transform_map", "generated/urbanlc.model.baseline.BaselineLCC.validate", "generated/urbanlc.model.baseline.MSSBaseline", "generated/urbanlc.model.baseline.MSSBaseline.build_model", "generated/urbanlc.model.baseline.MSSBaseline.construct_transform_map", "generated/urbanlc.model.baseline.MSSBaseline.infer", "generated/urbanlc.model.baseline.MSSBaseline.load_model", "generated/urbanlc.model.baseline.MSSBaseline.retrieve_images", "generated/urbanlc.model.baseline.MSSBaseline.save_model", "generated/urbanlc.model.baseline.MSSBaseline.train", "generated/urbanlc.model.baseline.MSSBaseline.transform_pipeline", "generated/urbanlc.model.baseline.MSSBaseline.update_transform_map", "generated/urbanlc.model.baseline.MSSBaseline.validate", "generated/urbanlc.model.baseline.OLI_TIRSBaseline", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.build_model", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.construct_transform_map", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.infer", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.load_model", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.retrieve_images", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.save_model", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.train", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.transform_pipeline", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.update_transform_map", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.validate", "generated/urbanlc.model.baseline.TMBaseline", "generated/urbanlc.model.baseline.TMBaseline.build_model", "generated/urbanlc.model.baseline.TMBaseline.construct_transform_map", "generated/urbanlc.model.baseline.TMBaseline.infer", "generated/urbanlc.model.baseline.TMBaseline.load_model", "generated/urbanlc.model.baseline.TMBaseline.retrieve_images", "generated/urbanlc.model.baseline.TMBaseline.save_model", "generated/urbanlc.model.baseline.TMBaseline.train", "generated/urbanlc.model.baseline.TMBaseline.transform_pipeline", "generated/urbanlc.model.baseline.TMBaseline.update_transform_map", "generated/urbanlc.model.baseline.TMBaseline.validate", "generated/urbanlc.model.dataloader", "generated/urbanlc.model.dataloader.CustomRasterDataset", "generated/urbanlc.model.dataloader.CustomRasterDataset.all_bands", "generated/urbanlc.model.dataloader.CustomRasterDataset.bounds", "generated/urbanlc.model.dataloader.CustomRasterDataset.cmap", "generated/urbanlc.model.dataloader.CustomRasterDataset.crs", "generated/urbanlc.model.dataloader.CustomRasterDataset.date_format", "generated/urbanlc.model.dataloader.CustomRasterDataset.filename_glob", "generated/urbanlc.model.dataloader.CustomRasterDataset.filename_regex", "generated/urbanlc.model.dataloader.CustomRasterDataset.is_image", "generated/urbanlc.model.dataloader.CustomRasterDataset.rgb_bands", "generated/urbanlc.model.dataloader.CustomRasterDataset.separate_files", "generated/urbanlc.model.dataloader.ESA2021", "generated/urbanlc.model.dataloader.ESA2021.all_bands", "generated/urbanlc.model.dataloader.ESA2021.bounds", "generated/urbanlc.model.dataloader.ESA2021.cmap", "generated/urbanlc.model.dataloader.ESA2021.crs", "generated/urbanlc.model.dataloader.ESA2021.date_format", "generated/urbanlc.model.dataloader.ESA2021.filename_glob", "generated/urbanlc.model.dataloader.ESA2021.filename_regex", "generated/urbanlc.model.dataloader.ESA2021.is_image", "generated/urbanlc.model.dataloader.ESA2021.rgb_bands", "generated/urbanlc.model.dataloader.ESA2021.separate_files", "generated/urbanlc.model.dataloader.Landsat", "generated/urbanlc.model.dataloader.Landsat.MSS", "generated/urbanlc.model.dataloader.Landsat.OLITIRS", "generated/urbanlc.model.dataloader.Landsat.TM", "generated/urbanlc.model.dataloader.Landsat.all_bands", "generated/urbanlc.model.dataloader.Landsat.bounds", "generated/urbanlc.model.dataloader.Landsat.cmap", "generated/urbanlc.model.dataloader.Landsat.crs", "generated/urbanlc.model.dataloader.Landsat.date_format", "generated/urbanlc.model.dataloader.Landsat.filename_glob", "generated/urbanlc.model.dataloader.Landsat.filename_regex", "generated/urbanlc.model.dataloader.Landsat.is_image", "generated/urbanlc.model.dataloader.Landsat.rgb_bands", "generated/urbanlc.model.dataloader.Landsat.separate_files", "generated/urbanlc.model.dataloader.get_dataloader", "generated/urbanlc.model.dataloader.parse_paths", "generated/urbanlc.model.deep_learning", "generated/urbanlc.model.deep_learning.DeepLearningLCC", "generated/urbanlc.model.deep_learning.DeepLearningLCC.build_model", "generated/urbanlc.model.deep_learning.DeepLearningLCC.construct_transform_map", "generated/urbanlc.model.deep_learning.DeepLearningLCC.denormalize_class", "generated/urbanlc.model.deep_learning.DeepLearningLCC.get_metrics", "generated/urbanlc.model.deep_learning.DeepLearningLCC.infer", "generated/urbanlc.model.deep_learning.DeepLearningLCC.load_model", "generated/urbanlc.model.deep_learning.DeepLearningLCC.normalize_class", "generated/urbanlc.model.deep_learning.DeepLearningLCC.save_model", "generated/urbanlc.model.deep_learning.DeepLearningLCC.set_device", "generated/urbanlc.model.deep_learning.DeepLearningLCC.setup_trainer", "generated/urbanlc.model.deep_learning.DeepLearningLCC.to", "generated/urbanlc.model.deep_learning.DeepLearningLCC.train", "generated/urbanlc.model.deep_learning.DeepLearningLCC.train_one_epoch", "generated/urbanlc.model.deep_learning.DeepLearningLCC.validate", "generated/urbanlc.model.deep_learning.MSSDeepLearning", "generated/urbanlc.model.deep_learning.MSSDeepLearning.build_model", "generated/urbanlc.model.deep_learning.MSSDeepLearning.construct_transform_map", "generated/urbanlc.model.deep_learning.MSSDeepLearning.denormalize_class", "generated/urbanlc.model.deep_learning.MSSDeepLearning.get_metrics", "generated/urbanlc.model.deep_learning.MSSDeepLearning.infer", "generated/urbanlc.model.deep_learning.MSSDeepLearning.load_model", "generated/urbanlc.model.deep_learning.MSSDeepLearning.normalize_class", "generated/urbanlc.model.deep_learning.MSSDeepLearning.save_model", "generated/urbanlc.model.deep_learning.MSSDeepLearning.set_device", "generated/urbanlc.model.deep_learning.MSSDeepLearning.setup_trainer", "generated/urbanlc.model.deep_learning.MSSDeepLearning.to", "generated/urbanlc.model.deep_learning.MSSDeepLearning.train", "generated/urbanlc.model.deep_learning.MSSDeepLearning.train_one_epoch", "generated/urbanlc.model.deep_learning.MSSDeepLearning.validate", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.build_model", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.construct_transform_map", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.denormalize_class", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.get_metrics", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.infer", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.load_model", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.normalize_class", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.save_model", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.set_device", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.setup_trainer", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.to", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.train", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.train_one_epoch", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.validate", "generated/urbanlc.model.deep_learning.TMDeepLearning", "generated/urbanlc.model.deep_learning.TMDeepLearning.build_model", "generated/urbanlc.model.deep_learning.TMDeepLearning.construct_transform_map", "generated/urbanlc.model.deep_learning.TMDeepLearning.denormalize_class", "generated/urbanlc.model.deep_learning.TMDeepLearning.get_metrics", "generated/urbanlc.model.deep_learning.TMDeepLearning.infer", "generated/urbanlc.model.deep_learning.TMDeepLearning.load_model", "generated/urbanlc.model.deep_learning.TMDeepLearning.normalize_class", "generated/urbanlc.model.deep_learning.TMDeepLearning.save_model", "generated/urbanlc.model.deep_learning.TMDeepLearning.set_device", "generated/urbanlc.model.deep_learning.TMDeepLearning.setup_trainer", "generated/urbanlc.model.deep_learning.TMDeepLearning.to", "generated/urbanlc.model.deep_learning.TMDeepLearning.train", "generated/urbanlc.model.deep_learning.TMDeepLearning.train_one_epoch", "generated/urbanlc.model.deep_learning.TMDeepLearning.validate", "generated/urbanlc.model.download", "generated/urbanlc.model.download.download_model", "generated/urbanlc.model.pipeline_transforms", "generated/urbanlc.model.pipeline_transforms.AppendBUI", "generated/urbanlc.model.pipeline_transforms.AppendBUI.T_destination", "generated/urbanlc.model.pipeline_transforms.AppendBUI.add_module", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_func", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_box", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_boxes", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_class", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_keypoint", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_mask", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_box", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_boxes", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_class", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_keypoint", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_mask", "generated/urbanlc.model.pipeline_transforms.AppendBUI.bfloat16", "generated/urbanlc.model.pipeline_transforms.AppendBUI.buffers", "generated/urbanlc.model.pipeline_transforms.AppendBUI.children", "generated/urbanlc.model.pipeline_transforms.AppendBUI.compute_transformation", "generated/urbanlc.model.pipeline_transforms.AppendBUI.cpu", "generated/urbanlc.model.pipeline_transforms.AppendBUI.cuda", "generated/urbanlc.model.pipeline_transforms.AppendBUI.double", "generated/urbanlc.model.pipeline_transforms.AppendBUI.dump_patches", "generated/urbanlc.model.pipeline_transforms.AppendBUI.eval", "generated/urbanlc.model.pipeline_transforms.AppendBUI.extra_repr", "generated/urbanlc.model.pipeline_transforms.AppendBUI.float", "generated/urbanlc.model.pipeline_transforms.AppendBUI.forward", "generated/urbanlc.model.pipeline_transforms.AppendBUI.forward_parameters", "generated/urbanlc.model.pipeline_transforms.AppendBUI.generate_parameters", "generated/urbanlc.model.pipeline_transforms.AppendBUI.generate_transformation_matrix", "generated/urbanlc.model.pipeline_transforms.AppendBUI.get_buffer", "generated/urbanlc.model.pipeline_transforms.AppendBUI.get_extra_state", "generated/urbanlc.model.pipeline_transforms.AppendBUI.get_parameter", "generated/urbanlc.model.pipeline_transforms.AppendBUI.get_submodule", "generated/urbanlc.model.pipeline_transforms.AppendBUI.half", "generated/urbanlc.model.pipeline_transforms.AppendBUI.identity_matrix", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_boxes", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_classes", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_inputs", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_keypoints", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_masks", "generated/urbanlc.model.pipeline_transforms.AppendBUI.ipu", "generated/urbanlc.model.pipeline_transforms.AppendBUI.load_state_dict", "generated/urbanlc.model.pipeline_transforms.AppendBUI.modules", "generated/urbanlc.model.pipeline_transforms.AppendBUI.named_buffers", "generated/urbanlc.model.pipeline_transforms.AppendBUI.named_children", "generated/urbanlc.model.pipeline_transforms.AppendBUI.named_modules", "generated/urbanlc.model.pipeline_transforms.AppendBUI.named_parameters", "generated/urbanlc.model.pipeline_transforms.AppendBUI.parameters", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_backward_hook", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_buffer", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_forward_hook", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_forward_pre_hook", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_full_backward_hook", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_load_state_dict_post_hook", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_module", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_parameter", "generated/urbanlc.model.pipeline_transforms.AppendBUI.requires_grad_", "generated/urbanlc.model.pipeline_transforms.AppendBUI.set_extra_state", "generated/urbanlc.model.pipeline_transforms.AppendBUI.set_rng_device_and_dtype", "generated/urbanlc.model.pipeline_transforms.AppendBUI.share_memory", "generated/urbanlc.model.pipeline_transforms.AppendBUI.state_dict", "generated/urbanlc.model.pipeline_transforms.AppendBUI.to", "generated/urbanlc.model.pipeline_transforms.AppendBUI.to_empty", "generated/urbanlc.model.pipeline_transforms.AppendBUI.train", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_boxes", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_classes", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_inputs", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_keypoints", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_masks", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_matrix", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_output_tensor", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_tensor", "generated/urbanlc.model.pipeline_transforms.AppendBUI.type", "generated/urbanlc.model.pipeline_transforms.AppendBUI.validate_tensor", "generated/urbanlc.model.pipeline_transforms.AppendBUI.xpu", "generated/urbanlc.model.pipeline_transforms.AppendBUI.zero_grad", "generated/urbanlc.model.pipeline_transforms.LandsatTransformer", "generated/urbanlc.model.pipeline_transforms.LandsatTransformer.calculate_statistics", "generated/urbanlc.model.pipeline_transforms.LandsatTransformer.transform", "generated/urbanlc.model.pipeline_transforms.MSSTransformer", "generated/urbanlc.model.pipeline_transforms.MSSTransformer.calculate_statistics", "generated/urbanlc.model.pipeline_transforms.MSSTransformer.transform", "generated/urbanlc.model.pipeline_transforms.OLITIRSTransformer", "generated/urbanlc.model.pipeline_transforms.OLITIRSTransformer.calculate_statistics", "generated/urbanlc.model.pipeline_transforms.OLITIRSTransformer.transform", "generated/urbanlc.model.pipeline_transforms.TMTransformer", "generated/urbanlc.model.pipeline_transforms.TMTransformer.calculate_statistics", "generated/urbanlc.model.pipeline_transforms.TMTransformer.transform", "generated/urbanlc.model.pipeline_transforms.compute_BUI", "generated/urbanlc.model.pipeline_transforms.compute_NDBI", "generated/urbanlc.model.pipeline_transforms.compute_NDVI", "generated/urbanlc.model.pipeline_transforms.compute_NDWI", "generated/urbanlc.model.pipeline_transforms.mix_patch", "generated/urbanlc.model.pipeline_transforms.rand_bbox", "generated/urbanlc.model.train_utils", "generated/urbanlc.model.train_utils.combine_prediction", "generated/urbanlc.model.train_utils.load_checkpoint", "generated/urbanlc.model.train_utils.save_checkpoint", "generated/urbanlc.model.train_utils.segment_satelite_image", "generated/urbanlc.model.train_utils.set_seed", "generated/urbanlc.utils", "generated/urbanlc.utils.export_geotiff", "generated/urbanlc.utils.open_at_scale", "generated/urbanlc.utils.open_at_size", "getting_started", "index", "quickstart", "usage"], "filenames": ["_autosummary/urbanlc.rst", "_autosummary/urbanlc.analyze.rst", "_autosummary/urbanlc.analyze.constant.rst", "_autosummary/urbanlc.analyze.evaluate.rst", "_autosummary/urbanlc.analyze.metrics.rst", "_autosummary/urbanlc.analyze.visualizer.rst", "_autosummary/urbanlc.downloader.rst", "_autosummary/urbanlc.downloader.base.rst", "_autosummary/urbanlc.downloader.downloader_constant.rst", "_autosummary/urbanlc.downloader.esa2021_downloader.rst", "_autosummary/urbanlc.downloader.general.rst", "_autosummary/urbanlc.downloader.landsat_downloader.rst", "_autosummary/urbanlc.downloader.logger.rst", "_autosummary/urbanlc.model.rst", "_autosummary/urbanlc.model.base.rst", "_autosummary/urbanlc.model.baseline.rst", "_autosummary/urbanlc.model.dataloader.rst", "_autosummary/urbanlc.model.deep_learning.rst", "_autosummary/urbanlc.model.download.rst", "_autosummary/urbanlc.model.pipeline_transforms.rst", "_autosummary/urbanlc.model.train_utils.rst", "_autosummary/urbanlc.utils.rst", "api.rst", "citation.rst", "generated/urbanlc.analyze.metrics.rst", "generated/urbanlc.analyze.metrics.accuracy.rst", "generated/urbanlc.analyze.metrics.cohen_kappa.rst", "generated/urbanlc.analyze.metrics.confusion_matrix.rst", "generated/urbanlc.analyze.metrics.get_class_distribution.rst", "generated/urbanlc.analyze.metrics.producer_accuracy.rst", "generated/urbanlc.analyze.metrics.user_accuracy.rst", "generated/urbanlc.analyze.visualizer.rst", "generated/urbanlc.analyze.visualizer.get_esa_colormap.rst", "generated/urbanlc.analyze.visualizer.plot_change.rst", "generated/urbanlc.analyze.visualizer.plot_class_distribution.rst", "generated/urbanlc.analyze.visualizer.plot_land_cover.rst", "generated/urbanlc.analyze.visualizer.plot_landsat.rst", "generated/urbanlc.analyze.visualizer.show_esa_label.rst", "generated/urbanlc.analyze.visualizer.visualize_data_batch.rst", "generated/urbanlc.downloader.base.rst", "generated/urbanlc.downloader.base.BaseDownloader.rst", "generated/urbanlc.downloader.base.BaseDownloader.download_image.rst", "generated/urbanlc.downloader.base.BaseDownloader.download_images.rst", "generated/urbanlc.downloader.base.BaseDownloader.get_spatial_filter.rst", "generated/urbanlc.downloader.base.BaseDownloader.merge_patches.rst", "generated/urbanlc.downloader.base.BaseDownloader.remove_cache.rst", "generated/urbanlc.downloader.base.BaseDownloader.set_root.rst", "generated/urbanlc.downloader.base.BoundingBox.rst", "generated/urbanlc.downloader.base.BoundingBox.bounds.rst", "generated/urbanlc.downloader.base.BoundingBox.from_bounds.rst", "generated/urbanlc.downloader.base.BoundingBox.from_point.rst", "generated/urbanlc.downloader.base.BoundingBox.get_partition.rst", "generated/urbanlc.downloader.base.BoundingBox.region.rst", "generated/urbanlc.downloader.esa2021_downloader.rst", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.rst", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.download_image.rst", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.download_images.rst", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.get_spatial_filter.rst", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.initialize.rst", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.merge_patches.rst", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.remove_cache.rst", "generated/urbanlc.downloader.esa2021_downloader.ESAWorldCover.set_root.rst", "generated/urbanlc.downloader.landsat_downloader.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.apply_scale_factors.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.download_image.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.download_images.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.get_spatial_filter.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.initialize.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.mask_clouds.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.merge_patches.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.remove_cache.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.retrieve_image.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatMSS.set_root.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.apply_scale_factors.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.download_image.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.download_images.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.get_spatial_filter.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.initialize.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.mask_clouds.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.merge_patches.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.remove_cache.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.retrieve_image.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatOLITIRS.set_root.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.apply_scale_factors.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.download_image.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.download_images.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.get_spatial_filter.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.initialize.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.mask_clouds.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.merge_patches.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.remove_cache.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.retrieve_image.rst", "generated/urbanlc.downloader.landsat_downloader.LandsatTM.set_root.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.apply_scale_factors.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.download_image.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.download_images.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.get_spatial_filter.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.mask_clouds.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.merge_patches.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.remove_cache.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.retrieve_image.rst", "generated/urbanlc.downloader.landsat_downloader.Landsat_Collection2.set_root.rst", "generated/urbanlc.model.base.rst", "generated/urbanlc.model.base.LCC.rst", "generated/urbanlc.model.base.LCC.construct_transform_map.rst", "generated/urbanlc.model.base.LCC.infer.rst", "generated/urbanlc.model.base.LCC.load_model.rst", "generated/urbanlc.model.base.LCC.save_model.rst", "generated/urbanlc.model.base.LCC.train.rst", "generated/urbanlc.model.base.LCC.validate.rst", "generated/urbanlc.model.baseline.rst", "generated/urbanlc.model.baseline.BaselineLCC.rst", "generated/urbanlc.model.baseline.BaselineLCC.build_model.rst", "generated/urbanlc.model.baseline.BaselineLCC.construct_transform_map.rst", "generated/urbanlc.model.baseline.BaselineLCC.infer.rst", "generated/urbanlc.model.baseline.BaselineLCC.load_model.rst", "generated/urbanlc.model.baseline.BaselineLCC.retrieve_images.rst", "generated/urbanlc.model.baseline.BaselineLCC.save_model.rst", "generated/urbanlc.model.baseline.BaselineLCC.train.rst", "generated/urbanlc.model.baseline.BaselineLCC.transform_pipeline.rst", "generated/urbanlc.model.baseline.BaselineLCC.update_transform_map.rst", "generated/urbanlc.model.baseline.BaselineLCC.validate.rst", "generated/urbanlc.model.baseline.MSSBaseline.rst", "generated/urbanlc.model.baseline.MSSBaseline.build_model.rst", "generated/urbanlc.model.baseline.MSSBaseline.construct_transform_map.rst", "generated/urbanlc.model.baseline.MSSBaseline.infer.rst", "generated/urbanlc.model.baseline.MSSBaseline.load_model.rst", "generated/urbanlc.model.baseline.MSSBaseline.retrieve_images.rst", "generated/urbanlc.model.baseline.MSSBaseline.save_model.rst", "generated/urbanlc.model.baseline.MSSBaseline.train.rst", "generated/urbanlc.model.baseline.MSSBaseline.transform_pipeline.rst", "generated/urbanlc.model.baseline.MSSBaseline.update_transform_map.rst", "generated/urbanlc.model.baseline.MSSBaseline.validate.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.build_model.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.construct_transform_map.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.infer.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.load_model.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.retrieve_images.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.save_model.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.train.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.transform_pipeline.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.update_transform_map.rst", "generated/urbanlc.model.baseline.OLI_TIRSBaseline.validate.rst", "generated/urbanlc.model.baseline.TMBaseline.rst", "generated/urbanlc.model.baseline.TMBaseline.build_model.rst", "generated/urbanlc.model.baseline.TMBaseline.construct_transform_map.rst", "generated/urbanlc.model.baseline.TMBaseline.infer.rst", "generated/urbanlc.model.baseline.TMBaseline.load_model.rst", "generated/urbanlc.model.baseline.TMBaseline.retrieve_images.rst", "generated/urbanlc.model.baseline.TMBaseline.save_model.rst", "generated/urbanlc.model.baseline.TMBaseline.train.rst", "generated/urbanlc.model.baseline.TMBaseline.transform_pipeline.rst", "generated/urbanlc.model.baseline.TMBaseline.update_transform_map.rst", "generated/urbanlc.model.baseline.TMBaseline.validate.rst", "generated/urbanlc.model.dataloader.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.all_bands.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.bounds.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.cmap.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.crs.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.date_format.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.filename_glob.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.filename_regex.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.is_image.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.rgb_bands.rst", "generated/urbanlc.model.dataloader.CustomRasterDataset.separate_files.rst", "generated/urbanlc.model.dataloader.ESA2021.rst", "generated/urbanlc.model.dataloader.ESA2021.all_bands.rst", "generated/urbanlc.model.dataloader.ESA2021.bounds.rst", "generated/urbanlc.model.dataloader.ESA2021.cmap.rst", "generated/urbanlc.model.dataloader.ESA2021.crs.rst", "generated/urbanlc.model.dataloader.ESA2021.date_format.rst", "generated/urbanlc.model.dataloader.ESA2021.filename_glob.rst", "generated/urbanlc.model.dataloader.ESA2021.filename_regex.rst", "generated/urbanlc.model.dataloader.ESA2021.is_image.rst", "generated/urbanlc.model.dataloader.ESA2021.rgb_bands.rst", "generated/urbanlc.model.dataloader.ESA2021.separate_files.rst", "generated/urbanlc.model.dataloader.Landsat.rst", "generated/urbanlc.model.dataloader.Landsat.MSS.rst", "generated/urbanlc.model.dataloader.Landsat.OLITIRS.rst", "generated/urbanlc.model.dataloader.Landsat.TM.rst", "generated/urbanlc.model.dataloader.Landsat.all_bands.rst", "generated/urbanlc.model.dataloader.Landsat.bounds.rst", "generated/urbanlc.model.dataloader.Landsat.cmap.rst", "generated/urbanlc.model.dataloader.Landsat.crs.rst", "generated/urbanlc.model.dataloader.Landsat.date_format.rst", "generated/urbanlc.model.dataloader.Landsat.filename_glob.rst", "generated/urbanlc.model.dataloader.Landsat.filename_regex.rst", "generated/urbanlc.model.dataloader.Landsat.is_image.rst", "generated/urbanlc.model.dataloader.Landsat.rgb_bands.rst", "generated/urbanlc.model.dataloader.Landsat.separate_files.rst", "generated/urbanlc.model.dataloader.get_dataloader.rst", "generated/urbanlc.model.dataloader.parse_paths.rst", "generated/urbanlc.model.deep_learning.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.build_model.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.construct_transform_map.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.denormalize_class.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.get_metrics.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.infer.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.load_model.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.normalize_class.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.save_model.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.set_device.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.setup_trainer.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.to.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.train.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.train_one_epoch.rst", "generated/urbanlc.model.deep_learning.DeepLearningLCC.validate.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.build_model.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.construct_transform_map.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.denormalize_class.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.get_metrics.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.infer.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.load_model.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.normalize_class.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.save_model.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.set_device.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.setup_trainer.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.to.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.train.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.train_one_epoch.rst", "generated/urbanlc.model.deep_learning.MSSDeepLearning.validate.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.build_model.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.construct_transform_map.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.denormalize_class.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.get_metrics.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.infer.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.load_model.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.normalize_class.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.save_model.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.set_device.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.setup_trainer.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.to.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.train.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.train_one_epoch.rst", "generated/urbanlc.model.deep_learning.OLITIRSDeepLearning.validate.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.build_model.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.construct_transform_map.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.denormalize_class.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.get_metrics.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.infer.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.load_model.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.normalize_class.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.save_model.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.set_device.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.setup_trainer.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.to.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.train.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.train_one_epoch.rst", "generated/urbanlc.model.deep_learning.TMDeepLearning.validate.rst", "generated/urbanlc.model.download.rst", "generated/urbanlc.model.download.download_model.rst", "generated/urbanlc.model.pipeline_transforms.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.T_destination.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.add_module.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_func.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_box.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_boxes.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_class.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_keypoint.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_mask.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_box.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_boxes.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_class.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_keypoint.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_mask.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.bfloat16.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.buffers.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.children.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.compute_transformation.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.cpu.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.cuda.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.double.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.dump_patches.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.eval.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.extra_repr.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.float.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.forward.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.forward_parameters.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.generate_parameters.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.generate_transformation_matrix.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.get_buffer.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.get_extra_state.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.get_parameter.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.get_submodule.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.half.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.identity_matrix.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_boxes.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_classes.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_inputs.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_keypoints.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.inverse_masks.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.ipu.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.load_state_dict.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.modules.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.named_buffers.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.named_children.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.named_modules.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.named_parameters.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.parameters.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_backward_hook.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_buffer.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_forward_hook.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_forward_pre_hook.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_full_backward_hook.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_load_state_dict_post_hook.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_module.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.register_parameter.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.requires_grad_.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.set_extra_state.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.set_rng_device_and_dtype.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.share_memory.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.state_dict.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.to.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.to_empty.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.train.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_boxes.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_classes.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_inputs.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_keypoints.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_masks.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_matrix.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_output_tensor.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.transform_tensor.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.type.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.validate_tensor.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.xpu.rst", "generated/urbanlc.model.pipeline_transforms.AppendBUI.zero_grad.rst", "generated/urbanlc.model.pipeline_transforms.LandsatTransformer.rst", "generated/urbanlc.model.pipeline_transforms.LandsatTransformer.calculate_statistics.rst", "generated/urbanlc.model.pipeline_transforms.LandsatTransformer.transform.rst", "generated/urbanlc.model.pipeline_transforms.MSSTransformer.rst", "generated/urbanlc.model.pipeline_transforms.MSSTransformer.calculate_statistics.rst", "generated/urbanlc.model.pipeline_transforms.MSSTransformer.transform.rst", "generated/urbanlc.model.pipeline_transforms.OLITIRSTransformer.rst", "generated/urbanlc.model.pipeline_transforms.OLITIRSTransformer.calculate_statistics.rst", "generated/urbanlc.model.pipeline_transforms.OLITIRSTransformer.transform.rst", "generated/urbanlc.model.pipeline_transforms.TMTransformer.rst", "generated/urbanlc.model.pipeline_transforms.TMTransformer.calculate_statistics.rst", "generated/urbanlc.model.pipeline_transforms.TMTransformer.transform.rst", "generated/urbanlc.model.pipeline_transforms.compute_BUI.rst", "generated/urbanlc.model.pipeline_transforms.compute_NDBI.rst", "generated/urbanlc.model.pipeline_transforms.compute_NDVI.rst", "generated/urbanlc.model.pipeline_transforms.compute_NDWI.rst", "generated/urbanlc.model.pipeline_transforms.mix_patch.rst", "generated/urbanlc.model.pipeline_transforms.rand_bbox.rst", "generated/urbanlc.model.train_utils.rst", "generated/urbanlc.model.train_utils.combine_prediction.rst", "generated/urbanlc.model.train_utils.load_checkpoint.rst", "generated/urbanlc.model.train_utils.save_checkpoint.rst", "generated/urbanlc.model.train_utils.segment_satelite_image.rst", "generated/urbanlc.model.train_utils.set_seed.rst", "generated/urbanlc.utils.rst", "generated/urbanlc.utils.export_geotiff.rst", "generated/urbanlc.utils.open_at_scale.rst", "generated/urbanlc.utils.open_at_size.rst", "getting_started.rst", "index.rst", "quickstart.rst", "usage.rst"], "titles": ["urbanlc", "urbanlc.analyze", "urbanlc.analyze.constant", "urbanlc.analyze.evaluate", "urbanlc.analyze.metrics", "urbanlc.analyze.visualizer", "urbanlc.downloader", "urbanlc.downloader.base", "urbanlc.downloader.downloader_constant", "urbanlc.downloader.esa2021_downloader", "urbanlc.downloader.general", "urbanlc.downloader.landsat_downloader", "urbanlc.downloader.logger", "urbanlc.model", "urbanlc.model.base", "urbanlc.model.baseline", "urbanlc.model.dataloader", "urbanlc.model.deep_learning", "urbanlc.model.download", "urbanlc.model.pipeline_transforms", "urbanlc.model.train_utils", "urbanlc.utils", "&lt;no title&gt;", "References", "urbanlc.analyze.metrics", "urbanlc.analyze.metrics.accuracy", "urbanlc.analyze.metrics.cohen_kappa", "urbanlc.analyze.metrics.confusion_matrix", "urbanlc.analyze.metrics.get_class_distribution", "urbanlc.analyze.metrics.producer_accuracy", "urbanlc.analyze.metrics.user_accuracy", "urbanlc.analyze.visualizer", "urbanlc.analyze.visualizer.get_esa_colormap", "urbanlc.analyze.visualizer.plot_change", "urbanlc.analyze.visualizer.plot_class_distribution", "urbanlc.analyze.visualizer.plot_land_cover", "urbanlc.analyze.visualizer.plot_landsat", "urbanlc.analyze.visualizer.show_esa_label", "urbanlc.analyze.visualizer.visualize_data_batch", "urbanlc.downloader.base", "urbanlc.downloader.base.BaseDownloader", "urbanlc.downloader.base.BaseDownloader.download_image", "urbanlc.downloader.base.BaseDownloader.download_images", "urbanlc.downloader.base.BaseDownloader.get_spatial_filter", "urbanlc.downloader.base.BaseDownloader.merge_patches", "urbanlc.downloader.base.BaseDownloader.remove_cache", "urbanlc.downloader.base.BaseDownloader.set_root", "urbanlc.downloader.base.BoundingBox", "urbanlc.downloader.base.BoundingBox.bounds", "urbanlc.downloader.base.BoundingBox.from_bounds", "urbanlc.downloader.base.BoundingBox.from_point", "urbanlc.downloader.base.BoundingBox.get_partition", "urbanlc.downloader.base.BoundingBox.region", "urbanlc.downloader.esa2021_downloader", "urbanlc.downloader.esa2021_downloader.ESAWorldCover", "urbanlc.downloader.esa2021_downloader.ESAWorldCover.download_image", "urbanlc.downloader.esa2021_downloader.ESAWorldCover.download_images", "urbanlc.downloader.esa2021_downloader.ESAWorldCover.get_spatial_filter", "urbanlc.downloader.esa2021_downloader.ESAWorldCover.initialize", "urbanlc.downloader.esa2021_downloader.ESAWorldCover.merge_patches", "urbanlc.downloader.esa2021_downloader.ESAWorldCover.remove_cache", "urbanlc.downloader.esa2021_downloader.ESAWorldCover.set_root", "urbanlc.downloader.landsat_downloader", "urbanlc.downloader.landsat_downloader.LandsatMSS", "urbanlc.downloader.landsat_downloader.LandsatMSS.apply_scale_factors", "urbanlc.downloader.landsat_downloader.LandsatMSS.download_image", "urbanlc.downloader.landsat_downloader.LandsatMSS.download_images", "urbanlc.downloader.landsat_downloader.LandsatMSS.get_spatial_filter", "urbanlc.downloader.landsat_downloader.LandsatMSS.initialize", "urbanlc.downloader.landsat_downloader.LandsatMSS.mask_clouds", "urbanlc.downloader.landsat_downloader.LandsatMSS.merge_patches", "urbanlc.downloader.landsat_downloader.LandsatMSS.remove_cache", "urbanlc.downloader.landsat_downloader.LandsatMSS.retrieve_image", "urbanlc.downloader.landsat_downloader.LandsatMSS.set_root", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.apply_scale_factors", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.download_image", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.download_images", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.get_spatial_filter", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.initialize", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.mask_clouds", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.merge_patches", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.remove_cache", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.retrieve_image", "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.set_root", "urbanlc.downloader.landsat_downloader.LandsatTM", "urbanlc.downloader.landsat_downloader.LandsatTM.apply_scale_factors", "urbanlc.downloader.landsat_downloader.LandsatTM.download_image", "urbanlc.downloader.landsat_downloader.LandsatTM.download_images", "urbanlc.downloader.landsat_downloader.LandsatTM.get_spatial_filter", "urbanlc.downloader.landsat_downloader.LandsatTM.initialize", "urbanlc.downloader.landsat_downloader.LandsatTM.mask_clouds", "urbanlc.downloader.landsat_downloader.LandsatTM.merge_patches", "urbanlc.downloader.landsat_downloader.LandsatTM.remove_cache", "urbanlc.downloader.landsat_downloader.LandsatTM.retrieve_image", "urbanlc.downloader.landsat_downloader.LandsatTM.set_root", "urbanlc.downloader.landsat_downloader.Landsat_Collection2", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.apply_scale_factors", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.download_image", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.download_images", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.get_spatial_filter", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.mask_clouds", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.merge_patches", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.remove_cache", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.retrieve_image", "urbanlc.downloader.landsat_downloader.Landsat_Collection2.set_root", "urbanlc.model.base", "urbanlc.model.base.LCC", "urbanlc.model.base.LCC.construct_transform_map", "urbanlc.model.base.LCC.infer", "urbanlc.model.base.LCC.load_model", "urbanlc.model.base.LCC.save_model", "urbanlc.model.base.LCC.train", "urbanlc.model.base.LCC.validate", "urbanlc.model.baseline", "urbanlc.model.baseline.BaselineLCC", "urbanlc.model.baseline.BaselineLCC.build_model", "urbanlc.model.baseline.BaselineLCC.construct_transform_map", "urbanlc.model.baseline.BaselineLCC.infer", "urbanlc.model.baseline.BaselineLCC.load_model", "urbanlc.model.baseline.BaselineLCC.retrieve_images", "urbanlc.model.baseline.BaselineLCC.save_model", "urbanlc.model.baseline.BaselineLCC.train", "urbanlc.model.baseline.BaselineLCC.transform_pipeline", "urbanlc.model.baseline.BaselineLCC.update_transform_map", "urbanlc.model.baseline.BaselineLCC.validate", "urbanlc.model.baseline.MSSBaseline", "urbanlc.model.baseline.MSSBaseline.build_model", "urbanlc.model.baseline.MSSBaseline.construct_transform_map", "urbanlc.model.baseline.MSSBaseline.infer", "urbanlc.model.baseline.MSSBaseline.load_model", "urbanlc.model.baseline.MSSBaseline.retrieve_images", "urbanlc.model.baseline.MSSBaseline.save_model", "urbanlc.model.baseline.MSSBaseline.train", "urbanlc.model.baseline.MSSBaseline.transform_pipeline", "urbanlc.model.baseline.MSSBaseline.update_transform_map", "urbanlc.model.baseline.MSSBaseline.validate", "urbanlc.model.baseline.OLI_TIRSBaseline", "urbanlc.model.baseline.OLI_TIRSBaseline.build_model", "urbanlc.model.baseline.OLI_TIRSBaseline.construct_transform_map", "urbanlc.model.baseline.OLI_TIRSBaseline.infer", "urbanlc.model.baseline.OLI_TIRSBaseline.load_model", "urbanlc.model.baseline.OLI_TIRSBaseline.retrieve_images", "urbanlc.model.baseline.OLI_TIRSBaseline.save_model", "urbanlc.model.baseline.OLI_TIRSBaseline.train", "urbanlc.model.baseline.OLI_TIRSBaseline.transform_pipeline", "urbanlc.model.baseline.OLI_TIRSBaseline.update_transform_map", "urbanlc.model.baseline.OLI_TIRSBaseline.validate", "urbanlc.model.baseline.TMBaseline", "urbanlc.model.baseline.TMBaseline.build_model", "urbanlc.model.baseline.TMBaseline.construct_transform_map", "urbanlc.model.baseline.TMBaseline.infer", "urbanlc.model.baseline.TMBaseline.load_model", "urbanlc.model.baseline.TMBaseline.retrieve_images", "urbanlc.model.baseline.TMBaseline.save_model", "urbanlc.model.baseline.TMBaseline.train", "urbanlc.model.baseline.TMBaseline.transform_pipeline", "urbanlc.model.baseline.TMBaseline.update_transform_map", "urbanlc.model.baseline.TMBaseline.validate", "urbanlc.model.dataloader", "urbanlc.model.dataloader.CustomRasterDataset", "urbanlc.model.dataloader.CustomRasterDataset.all_bands", "urbanlc.model.dataloader.CustomRasterDataset.bounds", "urbanlc.model.dataloader.CustomRasterDataset.cmap", "urbanlc.model.dataloader.CustomRasterDataset.crs", "urbanlc.model.dataloader.CustomRasterDataset.date_format", "urbanlc.model.dataloader.CustomRasterDataset.filename_glob", "urbanlc.model.dataloader.CustomRasterDataset.filename_regex", "urbanlc.model.dataloader.CustomRasterDataset.is_image", "urbanlc.model.dataloader.CustomRasterDataset.rgb_bands", "urbanlc.model.dataloader.CustomRasterDataset.separate_files", "urbanlc.model.dataloader.ESA2021", "urbanlc.model.dataloader.ESA2021.all_bands", "urbanlc.model.dataloader.ESA2021.bounds", "urbanlc.model.dataloader.ESA2021.cmap", "urbanlc.model.dataloader.ESA2021.crs", "urbanlc.model.dataloader.ESA2021.date_format", "urbanlc.model.dataloader.ESA2021.filename_glob", "urbanlc.model.dataloader.ESA2021.filename_regex", "urbanlc.model.dataloader.ESA2021.is_image", "urbanlc.model.dataloader.ESA2021.rgb_bands", "urbanlc.model.dataloader.ESA2021.separate_files", "urbanlc.model.dataloader.Landsat", "urbanlc.model.dataloader.Landsat.MSS", "urbanlc.model.dataloader.Landsat.OLITIRS", "urbanlc.model.dataloader.Landsat.TM", "urbanlc.model.dataloader.Landsat.all_bands", "urbanlc.model.dataloader.Landsat.bounds", "urbanlc.model.dataloader.Landsat.cmap", "urbanlc.model.dataloader.Landsat.crs", "urbanlc.model.dataloader.Landsat.date_format", "urbanlc.model.dataloader.Landsat.filename_glob", "urbanlc.model.dataloader.Landsat.filename_regex", "urbanlc.model.dataloader.Landsat.is_image", "urbanlc.model.dataloader.Landsat.rgb_bands", "urbanlc.model.dataloader.Landsat.separate_files", "urbanlc.model.dataloader.get_dataloader", "urbanlc.model.dataloader.parse_paths", "urbanlc.model.deep_learning", "urbanlc.model.deep_learning.DeepLearningLCC", "urbanlc.model.deep_learning.DeepLearningLCC.build_model", "urbanlc.model.deep_learning.DeepLearningLCC.construct_transform_map", "urbanlc.model.deep_learning.DeepLearningLCC.denormalize_class", "urbanlc.model.deep_learning.DeepLearningLCC.get_metrics", "urbanlc.model.deep_learning.DeepLearningLCC.infer", "urbanlc.model.deep_learning.DeepLearningLCC.load_model", "urbanlc.model.deep_learning.DeepLearningLCC.normalize_class", "urbanlc.model.deep_learning.DeepLearningLCC.save_model", "urbanlc.model.deep_learning.DeepLearningLCC.set_device", "urbanlc.model.deep_learning.DeepLearningLCC.setup_trainer", "urbanlc.model.deep_learning.DeepLearningLCC.to", "urbanlc.model.deep_learning.DeepLearningLCC.train", "urbanlc.model.deep_learning.DeepLearningLCC.train_one_epoch", "urbanlc.model.deep_learning.DeepLearningLCC.validate", "urbanlc.model.deep_learning.MSSDeepLearning", "urbanlc.model.deep_learning.MSSDeepLearning.build_model", "urbanlc.model.deep_learning.MSSDeepLearning.construct_transform_map", "urbanlc.model.deep_learning.MSSDeepLearning.denormalize_class", "urbanlc.model.deep_learning.MSSDeepLearning.get_metrics", "urbanlc.model.deep_learning.MSSDeepLearning.infer", "urbanlc.model.deep_learning.MSSDeepLearning.load_model", "urbanlc.model.deep_learning.MSSDeepLearning.normalize_class", "urbanlc.model.deep_learning.MSSDeepLearning.save_model", "urbanlc.model.deep_learning.MSSDeepLearning.set_device", "urbanlc.model.deep_learning.MSSDeepLearning.setup_trainer", "urbanlc.model.deep_learning.MSSDeepLearning.to", "urbanlc.model.deep_learning.MSSDeepLearning.train", "urbanlc.model.deep_learning.MSSDeepLearning.train_one_epoch", "urbanlc.model.deep_learning.MSSDeepLearning.validate", "urbanlc.model.deep_learning.OLITIRSDeepLearning", "urbanlc.model.deep_learning.OLITIRSDeepLearning.build_model", "urbanlc.model.deep_learning.OLITIRSDeepLearning.construct_transform_map", "urbanlc.model.deep_learning.OLITIRSDeepLearning.denormalize_class", "urbanlc.model.deep_learning.OLITIRSDeepLearning.get_metrics", "urbanlc.model.deep_learning.OLITIRSDeepLearning.infer", "urbanlc.model.deep_learning.OLITIRSDeepLearning.load_model", "urbanlc.model.deep_learning.OLITIRSDeepLearning.normalize_class", "urbanlc.model.deep_learning.OLITIRSDeepLearning.save_model", "urbanlc.model.deep_learning.OLITIRSDeepLearning.set_device", "urbanlc.model.deep_learning.OLITIRSDeepLearning.setup_trainer", "urbanlc.model.deep_learning.OLITIRSDeepLearning.to", "urbanlc.model.deep_learning.OLITIRSDeepLearning.train", "urbanlc.model.deep_learning.OLITIRSDeepLearning.train_one_epoch", "urbanlc.model.deep_learning.OLITIRSDeepLearning.validate", "urbanlc.model.deep_learning.TMDeepLearning", "urbanlc.model.deep_learning.TMDeepLearning.build_model", "urbanlc.model.deep_learning.TMDeepLearning.construct_transform_map", "urbanlc.model.deep_learning.TMDeepLearning.denormalize_class", "urbanlc.model.deep_learning.TMDeepLearning.get_metrics", "urbanlc.model.deep_learning.TMDeepLearning.infer", "urbanlc.model.deep_learning.TMDeepLearning.load_model", "urbanlc.model.deep_learning.TMDeepLearning.normalize_class", "urbanlc.model.deep_learning.TMDeepLearning.save_model", "urbanlc.model.deep_learning.TMDeepLearning.set_device", "urbanlc.model.deep_learning.TMDeepLearning.setup_trainer", "urbanlc.model.deep_learning.TMDeepLearning.to", "urbanlc.model.deep_learning.TMDeepLearning.train", "urbanlc.model.deep_learning.TMDeepLearning.train_one_epoch", "urbanlc.model.deep_learning.TMDeepLearning.validate", "urbanlc.model.download", "urbanlc.model.download.download_model", "urbanlc.model.pipeline_transforms", "urbanlc.model.pipeline_transforms.AppendBUI", "urbanlc.model.pipeline_transforms.AppendBUI.T_destination", "urbanlc.model.pipeline_transforms.AppendBUI.add_module", "urbanlc.model.pipeline_transforms.AppendBUI.apply", "urbanlc.model.pipeline_transforms.AppendBUI.apply_func", "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform", "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_box", "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_boxes", "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_class", "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_keypoint", "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_mask", "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform", "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_box", "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_boxes", "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_class", "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_keypoint", "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_mask", "urbanlc.model.pipeline_transforms.AppendBUI.bfloat16", "urbanlc.model.pipeline_transforms.AppendBUI.buffers", "urbanlc.model.pipeline_transforms.AppendBUI.children", "urbanlc.model.pipeline_transforms.AppendBUI.compute_transformation", "urbanlc.model.pipeline_transforms.AppendBUI.cpu", "urbanlc.model.pipeline_transforms.AppendBUI.cuda", "urbanlc.model.pipeline_transforms.AppendBUI.double", "urbanlc.model.pipeline_transforms.AppendBUI.dump_patches", "urbanlc.model.pipeline_transforms.AppendBUI.eval", "urbanlc.model.pipeline_transforms.AppendBUI.extra_repr", "urbanlc.model.pipeline_transforms.AppendBUI.float", "urbanlc.model.pipeline_transforms.AppendBUI.forward", "urbanlc.model.pipeline_transforms.AppendBUI.forward_parameters", "urbanlc.model.pipeline_transforms.AppendBUI.generate_parameters", "urbanlc.model.pipeline_transforms.AppendBUI.generate_transformation_matrix", "urbanlc.model.pipeline_transforms.AppendBUI.get_buffer", "urbanlc.model.pipeline_transforms.AppendBUI.get_extra_state", "urbanlc.model.pipeline_transforms.AppendBUI.get_parameter", "urbanlc.model.pipeline_transforms.AppendBUI.get_submodule", "urbanlc.model.pipeline_transforms.AppendBUI.half", "urbanlc.model.pipeline_transforms.AppendBUI.identity_matrix", "urbanlc.model.pipeline_transforms.AppendBUI.inverse_boxes", "urbanlc.model.pipeline_transforms.AppendBUI.inverse_classes", "urbanlc.model.pipeline_transforms.AppendBUI.inverse_inputs", "urbanlc.model.pipeline_transforms.AppendBUI.inverse_keypoints", "urbanlc.model.pipeline_transforms.AppendBUI.inverse_masks", "urbanlc.model.pipeline_transforms.AppendBUI.ipu", "urbanlc.model.pipeline_transforms.AppendBUI.load_state_dict", "urbanlc.model.pipeline_transforms.AppendBUI.modules", "urbanlc.model.pipeline_transforms.AppendBUI.named_buffers", "urbanlc.model.pipeline_transforms.AppendBUI.named_children", "urbanlc.model.pipeline_transforms.AppendBUI.named_modules", "urbanlc.model.pipeline_transforms.AppendBUI.named_parameters", "urbanlc.model.pipeline_transforms.AppendBUI.parameters", "urbanlc.model.pipeline_transforms.AppendBUI.register_backward_hook", "urbanlc.model.pipeline_transforms.AppendBUI.register_buffer", "urbanlc.model.pipeline_transforms.AppendBUI.register_forward_hook", "urbanlc.model.pipeline_transforms.AppendBUI.register_forward_pre_hook", "urbanlc.model.pipeline_transforms.AppendBUI.register_full_backward_hook", "urbanlc.model.pipeline_transforms.AppendBUI.register_load_state_dict_post_hook", "urbanlc.model.pipeline_transforms.AppendBUI.register_module", "urbanlc.model.pipeline_transforms.AppendBUI.register_parameter", "urbanlc.model.pipeline_transforms.AppendBUI.requires_grad_", "urbanlc.model.pipeline_transforms.AppendBUI.set_extra_state", "urbanlc.model.pipeline_transforms.AppendBUI.set_rng_device_and_dtype", "urbanlc.model.pipeline_transforms.AppendBUI.share_memory", "urbanlc.model.pipeline_transforms.AppendBUI.state_dict", "urbanlc.model.pipeline_transforms.AppendBUI.to", "urbanlc.model.pipeline_transforms.AppendBUI.to_empty", "urbanlc.model.pipeline_transforms.AppendBUI.train", "urbanlc.model.pipeline_transforms.AppendBUI.transform_boxes", "urbanlc.model.pipeline_transforms.AppendBUI.transform_classes", "urbanlc.model.pipeline_transforms.AppendBUI.transform_inputs", "urbanlc.model.pipeline_transforms.AppendBUI.transform_keypoints", "urbanlc.model.pipeline_transforms.AppendBUI.transform_masks", "urbanlc.model.pipeline_transforms.AppendBUI.transform_matrix", "urbanlc.model.pipeline_transforms.AppendBUI.transform_output_tensor", "urbanlc.model.pipeline_transforms.AppendBUI.transform_tensor", "urbanlc.model.pipeline_transforms.AppendBUI.type", "urbanlc.model.pipeline_transforms.AppendBUI.validate_tensor", "urbanlc.model.pipeline_transforms.AppendBUI.xpu", "urbanlc.model.pipeline_transforms.AppendBUI.zero_grad", "urbanlc.model.pipeline_transforms.LandsatTransformer", "urbanlc.model.pipeline_transforms.LandsatTransformer.calculate_statistics", "urbanlc.model.pipeline_transforms.LandsatTransformer.transform", "urbanlc.model.pipeline_transforms.MSSTransformer", "urbanlc.model.pipeline_transforms.MSSTransformer.calculate_statistics", "urbanlc.model.pipeline_transforms.MSSTransformer.transform", "urbanlc.model.pipeline_transforms.OLITIRSTransformer", "urbanlc.model.pipeline_transforms.OLITIRSTransformer.calculate_statistics", "urbanlc.model.pipeline_transforms.OLITIRSTransformer.transform", "urbanlc.model.pipeline_transforms.TMTransformer", "urbanlc.model.pipeline_transforms.TMTransformer.calculate_statistics", "urbanlc.model.pipeline_transforms.TMTransformer.transform", "urbanlc.model.pipeline_transforms.compute_BUI", "urbanlc.model.pipeline_transforms.compute_NDBI", "urbanlc.model.pipeline_transforms.compute_NDVI", "urbanlc.model.pipeline_transforms.compute_NDWI", "urbanlc.model.pipeline_transforms.mix_patch", "urbanlc.model.pipeline_transforms.rand_bbox", "urbanlc.model.train_utils", "urbanlc.model.train_utils.combine_prediction", "urbanlc.model.train_utils.load_checkpoint", "urbanlc.model.train_utils.save_checkpoint", "urbanlc.model.train_utils.segment_satelite_image", "urbanlc.model.train_utils.set_seed", "urbanlc.utils", "urbanlc.utils.export_geotiff", "urbanlc.utils.open_at_scale", "urbanlc.utils.open_at_size", "Getting Started", "UrbanLC reference documentation", "&lt;no title&gt;", "Test"], "terms": {"modul": [0, 1, 6, 8, 13, 260, 264, 265, 279, 280, 281, 283, 284, 285, 287, 288, 289, 295, 297, 298, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 337, 339, 361, 362, 364], "function": [2, 3, 4, 5, 12, 13, 16, 18, 19, 20, 21, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 108, 117, 128, 139, 150, 159, 201, 209, 216, 224, 231, 239, 246, 254, 259, 260, 261, 265, 294, 295, 296, 306, 313, 317, 322, 340, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "class": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 27, 28, 34, 39, 40, 47, 53, 54, 62, 63, 74, 85, 96, 106, 107, 108, 114, 115, 117, 126, 128, 137, 139, 148, 150, 159, 160, 167, 171, 178, 182, 183, 184, 185, 192, 198, 199, 201, 214, 216, 229, 231, 244, 246, 261, 262, 270, 276, 280, 312, 341, 344, 347, 350, 369], "dictionari": [8, 27, 32, 125, 136, 147, 158, 196, 200, 203, 209, 212, 213, 215, 218, 224, 227, 228, 230, 233, 239, 242, 243, 245, 248, 254, 257, 258, 325, 366], "map": [8, 27, 28, 36, 38, 108, 117, 118, 124, 128, 129, 135, 139, 140, 146, 150, 151, 157, 163, 174, 188, 201, 204, 216, 219, 231, 234, 246, 249, 306, 370], "landsat": [8, 16, 23, 36, 38, 63, 64, 66, 68, 69, 72, 74, 75, 77, 79, 80, 83, 85, 86, 88, 90, 91, 94, 96, 97, 99, 101, 104, 118, 120, 122, 125, 126, 129, 131, 133, 136, 137, 140, 142, 144, 147, 148, 151, 153, 155, 158, 159, 196, 214, 229, 244, 341, 343, 344, 346, 347, 349, 350, 352, 353, 354, 355, 356, 370], "surfac": [8, 74, 85, 369, 370], "reflect": [8, 74, 85, 369, 370], "dataset": [8, 16, 23, 36, 38, 69, 80, 91, 101, 159, 160, 161, 162, 163, 164, 166, 168, 169, 171, 172, 173, 174, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 196, 342, 345, 348, 351, 369], "name": [8, 36, 38, 108, 116, 117, 127, 128, 138, 139, 149, 150, 161, 167, 169, 172, 178, 180, 186, 192, 194, 200, 201, 207, 215, 216, 222, 230, 231, 237, 245, 246, 252, 264, 294, 296, 297, 308, 309, 310, 311, 314, 319, 320, 325, 362], "earth": [8, 23, 41, 55, 65, 69, 76, 80, 87, 91, 98, 101], "engin": [8, 23, 41, 55, 65, 69, 76, 80, 87, 91, 98, 101], "collect": 8, "path": [8, 27, 28, 33, 34, 35, 36, 46, 61, 73, 84, 95, 105, 118, 119, 120, 122, 125, 129, 130, 131, 133, 136, 140, 141, 142, 144, 147, 151, 152, 153, 155, 158, 197, 204, 205, 213, 219, 220, 228, 234, 235, 243, 249, 250, 258, 294, 296, 297, 342, 345, 348, 351, 361, 366, 367, 368, 369], "attribut": [8, 47, 160, 171, 182, 262, 264, 314, 318, 320, 321], "modifi": [16, 159, 279, 283, 284, 285, 289, 298, 305, 315, 316, 317, 318, 326, 337, 339, 369], "from": [16, 23, 25, 26, 29, 30, 32, 49, 50, 68, 69, 80, 91, 96, 101, 119, 120, 126, 130, 131, 137, 141, 142, 148, 152, 153, 159, 165, 166, 167, 176, 177, 178, 190, 191, 192, 197, 260, 264, 306, 314, 320, 322, 325, 342, 344, 345, 347, 348, 350, 351, 353, 354, 355, 356, 360, 361, 369, 370], "http": [16, 23, 69, 80, 91, 101, 159, 370], "github": [16, 159, 370], "com": [16, 23, 69, 80, 91, 101, 159, 370], "microsoft": [16, 159], "torchgeo": [16, 159], "blob": [16, 159], "main": [16, 159, 369], "py": [16, 159], "geo": [16, 159], "api": [22, 371], "document": [22, 287, 328, 371], "If": [23, 27, 34, 35, 36, 43, 57, 67, 78, 89, 100, 290, 294, 296, 297, 306, 314, 320, 325], "you": [23, 288, 290, 295, 297, 322, 369], "find": [23, 167, 178, 192], "thi": [23, 27, 32, 33, 34, 35, 36, 37, 38, 42, 97, 166, 177, 191, 260, 264, 279, 280, 283, 284, 285, 287, 288, 289, 294, 295, 296, 297, 298, 305, 306, 308, 311, 312, 313, 314, 315, 317, 318, 320, 321, 322, 325, 326, 327, 328, 337, 339, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370], "work": [23, 295], "code": 23, "us": [23, 27, 34, 35, 36, 37, 43, 56, 57, 63, 66, 67, 69, 72, 74, 77, 78, 80, 83, 85, 88, 89, 91, 94, 99, 100, 101, 104, 122, 123, 125, 126, 133, 134, 136, 137, 144, 145, 147, 148, 155, 156, 158, 163, 165, 166, 167, 169, 174, 176, 177, 178, 180, 188, 190, 191, 192, 194, 204, 208, 213, 214, 219, 223, 228, 229, 234, 238, 243, 244, 249, 253, 258, 264, 265, 297, 313, 314, 315, 316, 317, 318, 320, 325, 353, 362, 366, 368, 369], "your": [23, 288, 295, 322], "research": [23, 370], "pleas": [23, 325], "consid": [23, 314], "cite": 23, "placehold": [], "googl": [23, 69, 80, 91, 101, 260], "gee": [23, 96], "articl": 23, "noel2017googl": 23, "titl": [23, 35, 36], "planetari": 23, "scale": [23, 41, 55, 64, 65, 72, 75, 76, 83, 86, 87, 94, 97, 98, 104], "geospati": 23, "analysi": 23, "everyon": 23, "journal": 23, "remot": 23, "sens": 23, "environ": 23, "volum": 23, "202": [23, 27], "page": 23, "18": [23, 369], "27": 23, "year": [23, 58, 66, 72, 77, 83, 88, 94, 99, 104, 369], "2017": [23, 66, 77, 88, 99], "note": [23, 290, 295, 306, 307, 310, 318, 323], "big": 23, "data": [23, 27, 28, 34, 35, 36, 38, 40, 46, 56, 61, 63, 66, 72, 73, 74, 77, 83, 84, 85, 88, 94, 95, 96, 99, 104, 105, 120, 121, 122, 126, 131, 132, 133, 137, 142, 143, 144, 148, 153, 154, 155, 170, 181, 195, 196, 211, 213, 226, 228, 241, 243, 256, 258, 341, 344, 347, 350, 366, 367, 368, 370], "tool": 23, "applic": 23, "experi": 23, "issn": 23, "0034": 23, "4257": 23, "doi": 23, "10": [23, 27, 28, 41, 55, 65, 66, 76, 77, 87, 88, 98, 99, 369], "1016": 23, "j": [23, 326], "rse": 23, "06": 23, "031": 23, "url": 23, "www": [23, 69, 80, 91, 101], "sciencedirect": 23, "scienc": 23, "pii": 23, "s0034425717302900": 23, "author": 23, "noel": 23, "gorelick": 23, "matt": 23, "hancher": 23, "mike": 23, "dixon": 23, "simon": 23, "ilyushchenko": 23, "david": 23, "thau": 23, "rebecca": 23, "moor": 23, "esa": [23, 32, 37, 54, 56, 171, 196, 369], "worldcov": [23, 32, 37, 54, 56, 369], "10m": [23, 54], "v200": [23, 32, 37, 54, 171], "zanaga2022esa": 23, "zanaga": 23, "daniel": 23, "van": 23, "de": 23, "kerchov": 23, "ruben": 23, "daem": 23, "dirk": 23, "keersmaeck": 23, "wanda": 23, "brockmann": 23, "carsten": 23, "kirch": 23, "grit": 23, "wever": 23, "jan": 23, "cartu": 23, "oliv": 23, "santoro": 23, "maurizio": 23, "fritz": 23, "steffen": 23, "lesiv": 23, "myroslava": 23, "herold": 23, "martin": 23, "tsendbazar": 23, "nandin": 23, "erden": 23, "xu": 23, "panpan": 23, "ramoino": 23, "fabrizio": 23, "arino": 23, "olivi": 23, "m": [23, 25, 26, 29, 30, 165, 176, 190, 265, 307, 310], "2021": [23, 32, 37, 58, 66, 77, 88, 99, 171, 369], "month": [23, 66, 72, 77, 83, 88, 94, 99, 104], "oct": 23, "2022": [23, 369], "publish": 23, "zenodo": 23, "5281": 23, "7254221": 23, "org": 23, "our": 23, "laboratori": 23, "also": [23, 265, 284, 305, 325, 339], "provid": [23, 34, 35, 36, 38, 43, 56, 57, 66, 67, 77, 78, 88, 89, 99, 100, 116, 124, 127, 135, 138, 146, 149, 157, 295, 325, 366, 368, 369], "free": 23, "charg": 23, "global": [23, 370], "1": [23, 27, 33, 34, 63, 66, 68, 77, 88, 99, 122, 126, 133, 144, 155, 214, 265, 307, 310, 326, 343, 344, 346, 347, 349, 350, 352, 357, 369], "km": [23, 369], "present": 23, "futur": [23, 313, 325], "hourli": 23, "anthropogen": 23, "heat": 23, "flux": 23, "sleutsh": 23, "railwai": 23, "induc": 23, "urban": [23, 370], "grow": 23, "model": [23, 369, 370], "sleuth": 23, "here": [23, 369], "ndarrai": [25, 26, 27, 29, 30, 34, 35, 36, 118, 120, 123, 124, 129, 131, 134, 135, 140, 142, 145, 146, 151, 153, 156, 157, 204, 219, 234, 249, 353, 354, 355, 356, 366, 367, 368], "float": [25, 26, 27, 28, 33, 41, 43, 47, 48, 49, 50, 51, 55, 56, 57, 65, 66, 67, 76, 77, 78, 87, 88, 89, 98, 99, 100, 122, 133, 144, 155, 212, 227, 242, 257, 279, 285, 298, 326, 341, 342, 343, 345, 346, 348, 349, 351, 352, 357, 358, 367], "calcul": [25, 26, 27, 28, 29, 30, 167, 178, 192, 342, 345, 348, 351], "confus": [25, 26, 27, 29, 30, 287, 321], "matrix": [25, 26, 27, 29, 30, 299], "paramet": [25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 38, 41, 43, 44, 46, 49, 50, 51, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 104, 105, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 183, 184, 185, 196, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 265, 273, 279, 283, 284, 285, 289, 290, 296, 298, 305, 306, 311, 314, 320, 321, 325, 326, 327, 337, 339, 340, 342, 343, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 368], "np": [25, 26, 27, 29, 30, 118, 120, 123, 124, 129, 131, 134, 135, 140, 142, 145, 146, 151, 153, 156, 157, 204, 219, 234, 249, 353, 354, 355, 356, 366, 367, 368], "return": [25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 43, 44, 45, 49, 50, 51, 55, 57, 58, 59, 60, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 98, 100, 101, 102, 103, 104, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 162, 164, 173, 175, 183, 184, 185, 187, 189, 196, 197, 202, 203, 204, 206, 212, 213, 217, 218, 219, 221, 227, 228, 232, 233, 234, 236, 242, 243, 247, 248, 249, 251, 257, 258, 260, 265, 273, 279, 280, 281, 283, 284, 285, 287, 289, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 321, 325, 326, 327, 328, 337, 339, 342, 343, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 368], "sum": [25, 29, 30, 34], "diagon": [25, 29, 30], "element": [25, 29, 30], "divid": [25, 29, 30, 51], "all": [25, 161, 172, 186, 279, 280, 283, 284, 285, 289, 290, 298, 305, 307, 308, 310, 311, 312, 317, 326, 337, 339, 340, 370], "type": [25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 43, 49, 50, 51, 57, 58, 67, 69, 72, 78, 80, 83, 89, 91, 94, 100, 101, 104, 118, 119, 120, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 196, 202, 203, 204, 206, 212, 213, 217, 218, 219, 221, 227, 228, 232, 233, 234, 236, 242, 243, 247, 248, 249, 251, 257, 258, 260, 265, 273, 280, 312, 342, 343, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 367, 368], "cohen": 26, "": [26, 29, 30, 294, 295, 296, 297, 306, 314, 317, 318, 320, 325, 326], "kappa": 26, "coeffici": 26, "measur": 26, "agreement": 26, "between": [26, 108, 117, 128, 139, 150, 201, 216, 231, 246, 287, 314, 321], "observ": [26, 122, 133, 144, 155], "adjust": [26, 369], "chanc": 26, "The": [26, 27, 32, 33, 34, 35, 36, 37, 56, 58, 66, 72, 77, 83, 88, 94, 99, 104, 167, 178, 192, 260, 264, 273, 294, 296, 297, 314, 315, 316, 317, 318, 320, 323, 325, 326, 327, 360, 362, 367, 368, 369, 370], "comput": [26, 262, 273, 315, 317, 353, 354, 355, 356], "row": [26, 30], "column": [26, 29], "total": [26, 369], "well": [26, 265, 294, 296, 308, 309, 310, 311, 369], "expect": [26, 318, 338], "probabl": [26, 204, 219, 234, 249, 343, 346, 349, 352], "final": 26, "i": [26, 27, 32, 33, 34, 35, 36, 37, 43, 57, 66, 67, 77, 78, 88, 89, 99, 100, 167, 170, 178, 181, 192, 195, 260, 287, 294, 295, 296, 297, 306, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 326, 338, 343, 346, 349, 352, 360, 367, 368, 369, 370], "pred_path": 27, "str": [27, 28, 33, 34, 35, 36, 38, 40, 41, 44, 46, 55, 59, 61, 65, 70, 72, 73, 76, 81, 83, 84, 87, 92, 94, 95, 98, 102, 104, 105, 107, 115, 118, 119, 120, 122, 125, 129, 130, 131, 133, 136, 140, 141, 142, 144, 147, 151, 152, 153, 155, 158, 161, 169, 172, 180, 186, 194, 197, 199, 200, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 248, 249, 250, 252, 253, 254, 256, 257, 258, 260, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 288, 290, 291, 292, 293, 294, 296, 297, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 314, 318, 319, 320, 325, 327, 329, 330, 331, 332, 333, 337, 341, 342, 345, 348, 351, 360, 361, 362, 366, 367, 368], "gt_path": [27, 120, 122, 125, 131, 133, 136, 142, 144, 147, 153, 155, 158, 213, 228, 243, 258], "mapper_gt": 27, "list": [27, 28, 33, 41, 43, 47, 48, 51, 55, 56, 57, 65, 66, 67, 72, 76, 77, 78, 83, 87, 88, 89, 94, 98, 99, 100, 104, 107, 118, 120, 121, 122, 125, 129, 131, 132, 133, 136, 140, 142, 143, 144, 147, 151, 153, 154, 155, 158, 161, 169, 172, 180, 186, 194, 196, 197, 213, 228, 243, 258, 306, 318, 341, 342, 345, 348, 351, 360, 363, 369], "0": [27, 34, 41, 51, 55, 65, 76, 87, 98, 122, 133, 144, 155, 164, 175, 189, 199, 265, 307, 310, 326, 343, 344, 346, 347, 349, 350, 352, 357, 369], "11": [27, 66, 77, 88, 99, 369], "12": [23, 27, 66, 77, 88, 99], "20": [27, 28, 344, 369], "30": [27, 28, 344], "40": [27, 28], "50": [27, 28], "60": [27, 28], "61": 27, "62": 27, "70": [27, 28], "71": 27, "72": 27, "80": [27, 28], "81": 27, "82": 27, "90": [27, 28], "100": [27, 28, 297, 369], "110": 27, "120": 27, "121": 27, "122": 27, "130": 27, "140": 27, "150": 27, "3": [27, 34, 66, 77, 88, 99, 297, 326], "151": 27, "152": 27, "153": 27, "160": 27, "170": 27, "180": 27, "190": 27, "200": [27, 297], "201": 27, "210": 27, "2": [23, 27, 66, 72, 77, 83, 88, 94, 99, 104, 164, 175, 189, 265, 297, 307, 310, 326, 369], "220": 27, "4": [27, 66, 77, 85, 88, 90, 99, 148, 244, 350, 369], "mapper_pr": 27, "95": [27, 28], "gt_downscale_factor": 27, "option": [27, 28, 33, 34, 35, 36, 40, 41, 55, 56, 65, 66, 72, 76, 77, 83, 87, 88, 94, 98, 99, 104, 107, 120, 122, 131, 133, 142, 144, 153, 155, 197, 199, 204, 211, 212, 213, 219, 226, 227, 228, 234, 241, 242, 243, 249, 256, 257, 258, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 290, 300, 301, 302, 303, 304, 305, 306, 310, 314, 317, 319, 320, 325, 329, 330, 331, 332, 333, 334, 339, 341, 342, 343, 345, 346, 348, 349, 351, 352, 357, 360, 361, 363, 366], "none": [27, 33, 34, 35, 36, 37, 38, 41, 44, 45, 46, 55, 56, 59, 60, 61, 65, 66, 70, 71, 72, 73, 76, 77, 81, 82, 83, 84, 87, 88, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 107, 116, 119, 121, 122, 124, 127, 130, 132, 133, 135, 138, 141, 143, 144, 146, 149, 152, 154, 155, 157, 160, 171, 183, 184, 185, 197, 199, 200, 204, 205, 207, 208, 209, 211, 213, 215, 219, 220, 222, 223, 224, 226, 228, 230, 234, 235, 237, 238, 239, 241, 243, 245, 249, 250, 252, 253, 254, 256, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 290, 300, 301, 302, 303, 304, 305, 306, 310, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 351, 352, 361, 362, 363, 364, 366], "use_pred_as_ref": 27, "bool": [27, 34, 40, 41, 55, 56, 65, 66, 72, 76, 77, 83, 87, 88, 94, 98, 99, 104, 120, 122, 131, 133, 142, 144, 153, 155, 204, 213, 219, 228, 234, 243, 249, 258, 280, 286, 306, 308, 310, 311, 312, 314, 321, 325, 328, 340, 343, 346, 349, 352, 366], "fals": [27, 72, 83, 94, 104, 120, 131, 142, 153, 160, 168, 170, 179, 181, 193, 195, 204, 219, 234, 249, 286, 287, 314, 325, 326, 328, 340], "base": [27, 32, 33, 34, 55, 56, 57, 58, 59, 65, 66, 67, 70, 76, 77, 78, 81, 87, 88, 89, 92, 98, 99, 100, 102, 116, 124, 127, 135, 138, 146, 149, 157, 167, 178, 192, 199, 214, 229, 244, 260, 370], "predict": [27, 360, 370], "ground": [27, 38, 120, 122, 125, 131, 133, 136, 142, 144, 147, 153, 155, 158, 202, 206, 213, 217, 221, 228, 232, 236, 243, 247, 251, 258, 357], "truth": [27, 38, 120, 122, 125, 131, 133, 136, 142, 144, 147, 153, 155, 158, 202, 206, 213, 217, 221, 228, 232, 236, 243, 247, 251, 258, 357], "take": [27, 34, 35, 36, 38, 363], "downscal": [27, 28], "super": 27, "ar": [27, 32, 37, 43, 56, 57, 66, 67, 72, 77, 78, 83, 88, 89, 94, 99, 100, 104, 167, 178, 192, 268, 270, 271, 272, 274, 276, 277, 278, 280, 287, 288, 307, 308, 310, 311, 312, 314, 317, 318, 320, 323, 325, 326, 328, 369, 370], "appli": [27, 64, 75, 86, 97, 268, 270, 271, 272, 317, 343, 346, 349, 352, 367], "result": [27, 33, 37, 125, 136, 147, 158, 204, 213, 219, 228, 234, 243, 249, 258, 297, 310, 318, 370], "numpi": [27, 34, 35, 36, 204, 219, 234, 249, 364, 366], "arrai": [27, 204, 219, 234, 249, 366, 368], "default": [27, 28, 33, 34, 35, 36, 208, 223, 238, 253, 290, 306, 314, 321, 325, 328, 357, 360, 361, 362, 363, 366], "esa1992_map": 27, "esa2021_map": 27, "factor": [27, 64, 75, 86, 97, 212, 227, 242, 257, 367], "true": [27, 34, 40, 41, 55, 56, 65, 66, 76, 77, 87, 88, 98, 99, 122, 133, 144, 155, 167, 168, 170, 171, 178, 179, 181, 192, 193, 195, 204, 213, 219, 228, 234, 243, 249, 258, 265, 280, 290, 297, 306, 307, 308, 310, 311, 312, 314, 318, 321, 325, 326, 328, 343, 346, 349, 352, 366, 369], "refer": [27, 69, 80, 91, 101, 164, 175, 189, 294, 296, 297, 325, 368], "otherwis": [27, 280, 294, 296, 297, 308, 311, 312, 325], "downsample_scal": [28, 367], "indic": [28, 41, 55, 56, 65, 66, 72, 76, 77, 83, 87, 88, 94, 98, 99, 104, 108, 117, 128, 139, 150, 201, 216, 231, 246, 343, 346, 349, 352], "distribut": [28, 34, 357, 358], "land": [23, 28, 35, 38, 107, 118, 120, 122, 125, 129, 131, 133, 136, 140, 142, 144, 147, 151, 153, 155, 158, 199, 343, 346, 349, 352, 370], "cover": [23, 28, 35, 38, 107, 118, 120, 122, 125, 129, 131, 133, 136, 140, 142, 144, 147, 151, 153, 155, 158, 171, 199, 343, 346, 349, 352, 370], "specifi": [28, 33, 34, 35, 36, 41, 44, 49, 50, 51, 55, 56, 58, 59, 65, 66, 70, 76, 77, 81, 87, 88, 92, 98, 99, 102, 118, 120, 122, 123, 125, 129, 131, 133, 134, 136, 140, 142, 144, 145, 147, 151, 153, 155, 156, 158, 197, 203, 218, 233, 248, 260, 284, 294, 296, 297, 305, 327, 339, 360, 362, 363, 366, 367, 368], "resolut": [28, 41, 55, 65, 76, 87, 98], "ratio": [28, 122, 133, 144, 155], "repres": [28, 41, 47, 55, 65, 76, 87, 98], "esa2021_class": 28, "proport": 28, "produc": 29, "accuraci": [29, 30, 370], "each": [29, 30, 170, 181, 195, 265, 317, 360, 363, 369], "user": [30, 316, 325, 370], "retriev": [32, 37, 72, 83, 94, 104, 120, 131, 142, 153, 369], "colormap": [32, 35, 37], "normal": [32, 34, 202, 206, 217, 221, 232, 236, 247, 251, 354, 355, 356, 369], "european": [32, 37], "space": [32, 37], "agenc": [32, 37], "label": [32, 34, 37, 108, 117, 124, 128, 135, 139, 146, 150, 157, 201, 202, 206, 216, 217, 221, 231, 232, 236, 246, 247, 251, 369], "creat": [32, 33, 37, 49, 50, 325], "esa2021_label": 32, "configur": 32, "black": 32, "color": [32, 163, 174, 188], "valu": [32, 34, 35, 36, 37, 290, 316, 342, 345, 348, 351, 358, 364, 369], "under": [32, 340], "over": [32, 33, 280, 281, 307, 308, 309, 310, 311, 312], "defin": [32, 369], "bound": [32, 43, 47, 49, 51, 56, 57, 66, 67, 77, 78, 88, 89, 99, 100, 263, 297, 358, 360, 363, 369], "deriv": 32, "kei": [32, 290, 306, 318, 325], "tupl": [32, 34, 72, 83, 94, 104, 120, 121, 131, 132, 142, 143, 153, 154, 163, 174, 188, 212, 227, 242, 257, 308, 309, 310, 311, 313, 316, 317, 335, 342, 343, 345, 346, 348, 349, 351, 352, 357, 358, 360, 361, 363], "matplotlib": [32, 35, 36, 38, 369], "listedcolormap": 32, "boundarynorm": 32, "img_path": [33, 118, 120, 122, 125, 129, 131, 133, 136, 140, 142, 144, 147, 151, 153, 155, 158, 204, 213, 219, 228, 234, 243, 249, 258, 369], "root": [33, 40, 46, 61, 73, 84, 95, 105, 160, 171, 182, 183, 184, 185, 197, 213, 228, 243, 258, 342, 345, 348, 351, 369], "framer": 33, "save_path": [33, 35, 36, 107, 366, 369], "output": [33, 34, 35, 36, 56, 66, 69, 72, 77, 80, 83, 88, 91, 94, 99, 101, 104, 315, 317, 335], "mp4": 33, "video": 33, "plot": [33, 34, 35, 36, 163, 169, 174, 180, 188, 194], "chang": [33, 295, 313, 314, 321, 323, 369], "time": [33, 315, 316, 317, 343, 346, 349, 352, 369], "imag": [33, 36, 37, 38, 41, 42, 44, 55, 59, 64, 65, 66, 69, 70, 72, 75, 76, 77, 80, 81, 83, 86, 87, 88, 91, 92, 94, 97, 98, 99, 101, 102, 104, 118, 120, 122, 123, 125, 129, 131, 133, 134, 136, 140, 142, 144, 145, 147, 151, 153, 155, 156, 158, 204, 213, 219, 228, 234, 243, 249, 258, 343, 346, 349, 352, 353, 354, 355, 356, 357, 360, 363, 369, 370], "directori": [33, 45, 46, 60, 61, 71, 73, 82, 84, 93, 95, 103, 105, 183, 184, 185, 197, 213, 228, 243, 258, 260, 342, 345, 348, 351, 362], "either": [33, 316, 318], "within": [33, 322], "can": [33, 34, 35, 36, 264, 313, 314, 315, 316, 317, 318, 320, 326, 360, 366, 369], "save": [33, 34, 35, 36, 44, 56, 59, 66, 70, 77, 81, 88, 92, 99, 102, 111, 121, 132, 143, 154, 207, 222, 237, 252, 314, 362, 366, 369], "file": [33, 34, 35, 36, 41, 44, 55, 59, 65, 66, 70, 76, 77, 81, 87, 88, 92, 98, 99, 102, 118, 119, 120, 121, 122, 125, 129, 130, 131, 132, 133, 136, 140, 141, 142, 143, 144, 147, 151, 152, 153, 154, 155, 158, 166, 167, 170, 177, 178, 181, 191, 192, 195, 197, 207, 213, 222, 228, 237, 243, 252, 258, 342, 345, 348, 351, 361, 362, 366, 367, 368], "contain": [33, 38, 72, 83, 94, 104, 120, 121, 125, 131, 132, 136, 142, 143, 147, 153, 154, 158, 165, 167, 168, 176, 178, 179, 190, 192, 193, 196, 197, 200, 209, 215, 224, 230, 239, 245, 254, 265, 306, 308, 309, 311, 315, 316, 317, 318, 325, 326, 370], "outfil": 34, "figsiz": [34, 369], "int": [34, 41, 55, 56, 58, 65, 66, 68, 72, 76, 77, 79, 83, 87, 88, 90, 94, 98, 99, 104, 107, 120, 121, 131, 132, 142, 143, 153, 154, 163, 174, 188, 199, 204, 207, 212, 219, 222, 227, 234, 237, 242, 249, 252, 257, 262, 273, 284, 305, 335, 339, 342, 343, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366], "6": [34, 66, 77, 88, 99, 369], "input": [34, 123, 134, 145, 156, 196, 204, 219, 234, 249, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 290, 293, 299, 300, 301, 302, 303, 304, 315, 316, 317, 329, 330, 331, 332, 333, 336, 338, 341, 343, 344, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 363, 366, 367, 368, 370], "flatten": 34, "bar": 34, "an": [34, 35, 36, 40, 58, 264, 280, 281, 290, 294, 296, 297, 307, 308, 309, 310, 311, 312, 315, 317, 318, 320, 325], "doe": [34, 35, 36, 165, 176, 190], "ani": [34, 35, 36, 120, 121, 122, 125, 131, 132, 133, 136, 142, 143, 144, 147, 153, 154, 155, 158, 167, 178, 192, 197, 199, 200, 203, 209, 210, 211, 212, 213, 215, 218, 224, 225, 226, 227, 228, 230, 233, 239, 240, 241, 242, 243, 245, 248, 254, 255, 256, 257, 258, 263, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 282, 287, 293, 295, 300, 301, 302, 303, 304, 306, 322, 328, 329, 330, 331, 332, 333, 336, 341, 366, 370], "which": [34, 297, 369, 370], "size": [34, 41, 51, 55, 65, 76, 87, 98, 120, 131, 142, 153, 196, 280, 292, 308, 311, 312, 358, 360, 363, 366, 368], "figur": 34, "img": [35, 36, 123, 134, 145, 156, 343, 346, 349, 352, 353, 354, 355, 356, 363, 366, 369], "ax": [35, 36, 38, 369], "given": [35, 36, 197, 264, 293, 294, 296, 297, 314, 315, 316, 317, 318, 320, 326, 369], "axi": [35, 36, 37, 38], "where": [35, 36, 369], "displai": [35, 36, 37, 38, 56, 66, 77, 88, 99], "rgb": [36, 38, 169, 180, 194, 369], "band": [36, 41, 55, 64, 65, 75, 76, 86, 87, 97, 98, 160, 161, 167, 169, 170, 171, 172, 178, 180, 181, 186, 192, 194, 195, 342, 345, 348, 351, 353, 354, 355, 356, 366, 369], "imageri": [36, 168, 179, 193], "e": [36, 38, 208, 223, 238, 253, 287, 317, 321, 325, 326, 328, 369], "g": [23, 36, 38, 208, 223, 238, 253, 287, 321, 325, 326, 328, 369], "landsat8": [36, 38, 369], "descript": 37, "represent": [37, 288], "get_esa_colormap": 37, "secondari": 37, "x": [37, 366], "tensor": [38, 202, 204, 206, 217, 219, 221, 232, 234, 236, 247, 249, 251, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 308, 312, 313, 314, 317, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 338, 343, 346, 349, 352, 357, 358, 360, 363], "gt": [38, 202, 206, 217, 221, 232, 236, 247, 251, 357], "batch": [38, 196], "correspond": [38, 268, 270, 271, 272, 274, 276, 277, 278, 290, 295, 306, 317, 322, 325, 363, 369], "It": [38, 166, 177, 191, 315, 316, 318, 325, 363, 370], "side": 38, "torch": [38, 202, 204, 206, 217, 219, 221, 232, 234, 236, 247, 249, 251, 260, 265, 273, 280, 294, 296, 297, 308, 312, 313, 314, 315, 316, 317, 318, 324, 326, 327, 340, 343, 346, 349, 352, 357, 360, 361, 362, 363, 364, 369], "clear_cach": 40, "serv": 40, "abstract": [40, 42, 96, 97, 107, 109, 110, 111, 112, 113, 115], "variou": 40, "method": [40, 42, 47, 54, 63, 74, 85, 96, 97, 107, 109, 110, 111, 112, 113, 115, 126, 137, 148, 160, 171, 182, 199, 214, 229, 244, 262, 279, 283, 284, 285, 288, 289, 294, 296, 298, 305, 321, 326, 337, 339, 341, 344, 347, 350, 360, 366], "bbox": [41, 55, 65, 76, 87, 98], "boundingbox": [41, 43, 55, 57, 65, 67, 76, 78, 87, 89, 98, 100, 162, 173, 187], "format": [41, 43, 55, 57, 65, 67, 76, 78, 87, 89, 98, 100, 165, 166, 176, 177, 190, 191, 326, 338, 366, 369], "geotiff": [41, 44, 55, 59, 65, 70, 76, 81, 87, 92, 98, 102, 366], "base_filenam": [41, 44, 55, 59, 65, 70, 76, 81, 87, 92, 98, 102], "step": [41, 51, 55, 65, 76, 87, 98, 212, 227, 242, 257], "07": [41, 51, 55, 65, 76, 87, 98], "merge_fil": [41, 55, 65, 76, 87, 98], "num_work": [41, 55, 56, 65, 66, 76, 77, 87, 88, 98, 99, 196], "8": [41, 55, 56, 65, 66, 74, 76, 77, 79, 87, 88, 98, 99, 137, 196, 229, 347, 369], "parallel": [41, 55, 65, 76, 87, 98], "patch": [41, 44, 51, 55, 59, 65, 70, 76, 81, 87, 92, 98, 102, 343, 346, 349, 352, 357, 360, 363], "ee": [41, 55, 64, 65, 69, 72, 75, 76, 80, 83, 86, 87, 91, 94, 98, 101, 104], "instanc": [41, 43, 49, 50, 55, 57, 58, 65, 67, 68, 76, 78, 79, 87, 89, 90, 98, 100, 183, 184, 185, 310], "region": [41, 47, 55, 65, 72, 76, 83, 87, 94, 98, 104, 360], "spatial": [41, 55, 65, 76, 87, 98], "meter": [41, 55, 65, 76, 87, 98], "filenam": [41, 44, 55, 59, 65, 70, 76, 81, 87, 92, 98, 102, 165, 167, 176, 178, 183, 184, 185, 190, 192, 197, 207, 222, 237, 252], "partit": [41, 51, 55, 65, 76, 87, 98, 360, 363], "interest": [41, 55, 65, 72, 76, 83, 87, 94, 98, 104], "flag": [41, 55, 56, 65, 66, 72, 76, 77, 83, 87, 88, 94, 98, 99, 104, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 290, 293, 300, 301, 302, 303, 304, 329, 330, 331, 332, 333, 343, 346, 349, 352], "whether": [41, 55, 56, 65, 66, 72, 76, 77, 83, 87, 88, 94, 98, 99, 104, 120, 122, 131, 133, 142, 144, 153, 155, 204, 213, 219, 228, 234, 243, 249, 258, 297, 306, 310, 314, 321, 328, 343, 346, 349, 352, 366], "merg": [41, 44, 55, 59, 65, 70, 76, 81, 87, 92, 98, 102], "number": [23, 41, 55, 56, 63, 65, 66, 76, 77, 87, 88, 98, 99, 167, 178, 192, 196, 212, 227, 242, 257, 297, 323, 342, 343, 345, 346, 348, 349, 351, 352, 364], "worker": [41, 55, 56, 65, 66, 76, 77, 87, 88, 98, 99, 196], "concurr": [41, 55, 56, 65, 66, 76, 77, 87, 88, 98, 99], "subclass": [42, 97], "must": [42, 97, 306], "implement": [42, 97, 288, 295, 322], "radiu": [43, 50, 56, 57, 66, 67, 77, 78, 88, 89, 99, 100, 369], "box": [43, 47, 49, 51, 56, 57, 66, 67, 77, 78, 88, 89, 99, 100, 268, 269, 274, 275, 300, 329, 358, 360, 363, 369], "coordin": [43, 49, 56, 57, 66, 67, 77, 78, 88, 89, 99, 100, 164, 175, 189, 358, 360, 363, 369], "lon_min": [43, 49, 57, 67, 78, 89, 100], "lat_min": [43, 49, 57, 67, 78, 89, 100], "lon_max": [43, 49, 57, 67, 78, 89, 100], "lat_max": [43, 49, 57, 67, 78, 89, 100], "center": [43, 56, 57, 66, 67, 77, 78, 88, 89, 99, 100, 369], "lon": [43, 50, 57, 67, 78, 89, 100], "lat": [43, 50, 57, 67, 78, 89, 100], "around": [43, 56, 57, 66, 67, 77, 78, 88, 89, 99, 100], "onli": [43, 56, 57, 66, 67, 77, 78, 88, 89, 99, 100, 280, 287, 295, 307, 308, 310, 311, 312, 314, 315, 316, 317, 326, 328, 369], "rais": [43, 57, 67, 78, 89, 100, 294, 296, 297, 306, 317], "valueerror": [43, 57, 67, 78, 89, 100], "invalid": [43, 57, 67, 78, 89, 100, 294, 296, 297], "compress": [44, 59, 70, 81, 92, 102, 366, 369], "packbit": [44, 59, 70, 81, 92, 102, 369], "algorithm": [44, 59, 69, 70, 80, 81, 91, 92, 101, 102], "remov": [45, 60, 71, 82, 93, 103, 310, 313, 315, 316, 317, 318], "cach": [45, 60, 71, 82, 93, 103, 160, 171, 204, 213, 219, 228, 234, 243, 249, 258], "recreat": [45, 60, 71, 82, 93, 103], "set": [46, 61, 73, 84, 95, 105, 208, 209, 223, 224, 238, 239, 253, 254, 287, 288, 293, 310, 314, 318, 321, 325, 326, 328, 340, 364, 369], "store": [46, 61, 73, 84, 95, 105, 170, 181, 195, 260, 295, 310, 322, 369], "geometri": [47, 52, 72, 83, 94, 104], "geograph": 47, "classmethod": [49, 50, 58, 68, 79, 90, 183, 184, 185], "minimum": 49, "longitud": [49, 50, 369], "latitud": [49, 50, 369], "maximum": [49, 212, 227, 242, 257], "20000": 50, "point": [50, 122, 133, 144, 155, 279, 285, 289, 298, 326], "dataset_nam": [54, 63, 74, 85, 96], "arg": [54, 58, 63, 68, 74, 79, 85, 90, 96, 115, 126, 137, 148, 182, 183, 184, 185, 199, 214, 229, 244, 264, 265, 280, 284, 290, 294, 296, 297, 306, 308, 310, 311, 312, 314, 320, 321, 322, 325, 326, 327, 328, 337, 340], "kwarg": [54, 58, 63, 68, 74, 79, 85, 90, 96, 115, 126, 137, 148, 182, 183, 184, 185, 199, 209, 214, 224, 229, 239, 244, 254, 290, 317, 326, 329, 330, 331, 332, 333], "v100": 54, "verbos": [56, 66, 77, 88, 99], "log": [56, 66, 77, 88, 99], "messag": [56, 66, 77, 88, 99], "target": [58, 66, 72, 77, 83, 88, 94, 99, 104, 294, 296, 297], "2020": [58, 66, 77, 88, 99], "addit": [58, 167, 178, 183, 184, 185, 192, 318, 326], "posit": [58, 183, 184, 185, 315, 316, 317, 325], "argument": [58, 183, 184, 185, 305, 315, 316, 317, 318, 325, 326, 339], "pass": [58, 290, 312, 315, 316, 317], "constructor": 58, "keyword": [58, 183, 184, 185, 197, 315, 316, 325, 326, 342, 345, 348, 351], "dn": 63, "digit": 63, "5": [63, 66, 68, 77, 88, 90, 99, 126, 214, 343, 344, 346, 349, 352, 369], "mss": [63, 126, 196, 214, 344, 369, 370], "sensor": [63, 74, 85, 126, 137, 148, 183, 184, 185, 196, 214, 229, 244, 260, 344, 347, 350, 369, 370], "union": [66, 72, 77, 83, 88, 94, 99, 104, 120, 131, 142, 153, 204, 208, 219, 223, 234, 238, 249, 253, 284, 305, 313, 317, 327, 337, 339, 342, 343, 345, 346, 348, 349, 351, 352], "2013": [66, 77, 88, 99], "2014": [66, 77, 88, 99], "2015": [66, 77, 88, 99], "2016": [66, 77, 88, 99], "2018": [66, 77, 88, 99], "2019": [66, 77, 88, 99], "7": [66, 77, 85, 88, 90, 99, 148, 244, 350, 369], "9": [66, 74, 77, 79, 88, 99, 137, 229, 347], "allow_tier2": [66, 77, 88, 99], "overwrit": [66, 77, 88, 99, 290], "pixel": [66, 72, 77, 83, 88, 94, 99, 104, 122, 133, 144, 155], "wise": [66, 72, 77, 83, 88, 94, 99, 104], "median": [66, 72, 77, 83, 88, 94, 99, 104], "allow": [66, 77, 88, 99, 317], "fall": [66, 77, 88, 99], "back": [66, 77, 88, 99], "tier": [66, 72, 77, 83, 88, 94, 99, 104], "unavail": [66, 77, 88, 99], "exist": [66, 77, 88, 99, 294, 296, 297, 306], "n_landsat": [68, 79, 90, 369], "annot": [68, 79, 90], "field": [68, 79, 90, 306], "ge": [68, 79, 90], "le": [68, 79, 90], "version": [68, 79, 90, 164, 175, 189, 313], "satellit": [68, 79, 90, 363, 369], "mask": [69, 72, 80, 83, 91, 94, 101, 104, 168, 179, 193, 272, 278, 343, 346, 349, 352], "cloud": [69, 72, 80, 83, 91, 94, 101, 104, 370], "shadow": [69, 80, 91, 101], "snow": [69, 80, 91, 101], "cfmask": [69, 80, 91, 101], "develop": [69, 80, 91, 101, 370], "catalog": [69, 80, 91, 101], "landsat_lc08_c02_t1_l2": [69, 80, 91, 101], "usg": [69, 80, 91, 101], "gov": [69, 80, 91, 101], "mission": [69, 80, 91, 101], "use_tier2": [72, 83, 94, 104], "specif": [72, 83, 94, 104, 116, 127, 138, 149, 166, 167, 177, 178, 191, 192, 200, 215, 230, 245], "annual": [23, 72, 83, 94, 104], "reproject": [72, 83, 94, 104], "espg": [72, 83, 94, 104], "4326": [72, 83, 94, 104], "date": [72, 83, 94, 104, 165, 167, 176, 178, 190, 192, 370], "oli": [74, 137, 184, 229, 347, 369, 370], "tir": [74, 137, 184, 229, 347, 369, 370], "tm": [85, 148, 196, 244, 350, 369, 370], "legend": 107, "class_nam": 107, "classif": [23, 107, 125, 136, 147, 158, 199, 370], "construct": [108, 117, 128, 139, 150, 201, 216, 231, 246, 284, 305, 339], "transform": [108, 117, 123, 124, 128, 134, 135, 139, 145, 146, 150, 156, 157, 160, 171, 201, 216, 231, 246, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 293, 300, 301, 302, 303, 304, 329, 330, 331, 332, 333], "perform": [109, 118, 122, 129, 133, 140, 144, 151, 155, 204, 219, 234, 249, 290, 318, 325, 368, 370], "load": [110, 119, 130, 141, 152, 205, 211, 220, 226, 235, 241, 250, 256, 361], "pre": [110, 119, 130, 141, 152, 205, 220, 235, 250, 260, 316], "train": [110, 119, 120, 124, 130, 131, 135, 141, 142, 146, 152, 153, 157, 160, 171, 182, 203, 205, 207, 208, 212, 218, 220, 222, 223, 227, 233, 235, 237, 238, 242, 248, 250, 252, 253, 257, 260, 287, 321, 343, 346, 349, 352, 362], "current": [111, 121, 132, 143, 154, 207, 212, 222, 227, 237, 242, 252, 257, 264, 318, 325, 362, 369], "model_nam": 115, "model_param": [115, 116, 127, 138, 149, 199, 200, 215, 230, 245], "dict": [115, 116, 122, 125, 127, 133, 136, 138, 144, 147, 149, 155, 158, 163, 174, 188, 199, 200, 203, 209, 211, 212, 213, 215, 218, 224, 226, 227, 228, 230, 233, 239, 241, 242, 243, 245, 248, 254, 256, 257, 258, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 290, 291, 292, 293, 300, 301, 302, 303, 304, 306, 322, 325, 329, 330, 331, 332, 333, 341, 366], "lcc": [115, 126, 137, 148, 199, 214, 229, 244, 370], "classic": [115, 126, 137, 148], "ml": [115, 126, 137, 148], "build": [116, 127, 138, 149, 200, 215, 230, 245, 295], "initi": [116, 127, 138, 149, 183, 184, 185, 265, 369], "checkpoint_path": [119, 130, 141, 152, 205, 220, 235, 250, 361], "checkpoint": [119, 121, 130, 132, 141, 143, 152, 154, 205, 207, 220, 222, 235, 237, 250, 252, 361, 362], "return_s": [120, 131, 142, 153], "preprocess": [120, 131, 142, 153], "infer": [120, 131, 142, 153, 171, 182, 208, 223, 238, 253, 369], "origin": [120, 131, 142, 153, 166, 177, 191, 360], "relat": [121, 132, 143, 154], "inform": [121, 132, 143, 154, 288], "enable_cv": [122, 133, 144, 155], "cross_validate_param": [122, 133, 144, 155], "train_siz": [122, 133, 144, 155], "cross": [122, 133, 144, 155], "valid": [122, 133, 144, 155, 203, 211, 218, 226, 233, 241, 248, 256, 369], "y_train": [124, 135, 146, 157], "updat": [124, 135, 146, 157, 212, 227, 242, 257, 325], "report": [125, 136, 147, 158], "cr": [160, 171], "re": [160, 171, 288], "exclud": [160, 171, 197, 342, 345, 348, 351], "all_path": [160, 171, 342, 345, 348, 351], "custom": [160, 288, 366], "raster": 160, "dl": 160, "avail": [161, 172, 186, 208, 223, 238, 253, 361, 370], "properti": [162, 164, 173, 175, 187, 189, 334], "index": [162, 167, 173, 178, 187, 192, 262, 273, 353, 354, 355, 356], "minx": [162, 173, 187], "maxx": [162, 173, 187], "mini": [162, 173, 187], "maxi": [162, 173, 187], "mint": [162, 167, 173, 178, 187, 192], "maxt": [162, 167, 173, 178, 187, 192], "system": [164, 175, 189], "new": [164, 175, 189, 290, 317], "y": [165, 176, 190, 366], "d": [165, 176, 190], "string": [165, 176, 190, 197, 288, 294, 296, 297, 337], "pars": [165, 176, 190, 197], "Not": [165, 176, 190], "filename_regex": [165, 176, 190], "group": [165, 167, 176, 178, 190, 192], "glob": [166, 177, 183, 184, 185, 191, 197, 342, 345, 348, 351], "express": [166, 167, 177, 178, 191, 192], "search": [166, 167, 177, 178, 191, 192, 197], "should": [166, 167, 177, 178, 191, 192, 284, 288, 295, 297, 305, 314, 315, 316, 317, 318, 321, 339, 369], "enough": [166, 177, 191], "pick": [166, 177, 191], "up": [166, 177, 191, 209, 224, 239, 254, 262, 273, 353, 354, 370], "other": [166, 167, 177, 178, 191, 192, 295, 369, 370], "includ": [166, 177, 191, 265, 295, 314, 320, 325, 361, 362], "extens": [166, 177, 191], "mai": [166, 167, 177, 178, 191, 192, 287, 290, 295, 321], "differ": [166, 177, 191, 210, 225, 240, 255, 284, 305, 314, 323, 339, 354, 355, 356], "than": [166, 177, 191], "what": [166, 177, 191], "wa": [166, 177, 191], "download": [166, 177, 191, 370], "regular": [167, 178, 192], "extract": [167, 178, 192, 363], "follow": [167, 178, 192, 307, 310, 315, 316, 317, 318, 357, 369], "insert": [167, 178, 192], "when": [167, 178, 192, 295, 317, 318, 326, 369], "separate_fil": [167, 178, 192], "replac": [167, 178, 192], "request": [167, 178, 192], "separ": [170, 181, 195], "els": [170, 181, 195, 369], "filename_glob": [171, 182, 183, 184, 185, 197, 342, 345, 348, 351], "world": [171, 369], "all_band": 182, "pattern": [183, 184, 185, 197, 213, 228, 243, 258, 342, 345, 348, 351], "match": [183, 184, 185, 197, 306, 368], "sensor_typ": [196, 260], "tile_per_load": 196, "24": 196, "input_s": 196, "224": [196, 363], "length": 196, "25000": 196, "batch_siz": 196, "64": 196, "get": [196, 203, 218, 233, 248, 370], "pytorch": [196, 262, 273, 361, 362, 364], "esa2021": 196, "olitir": [196, 369], "tile": [196, 366], "per": 196, "loader": 196, "certain": [197, 287, 328], "exclus": 197, "start": [197, 370], "criteria": 197, "architectur": [199, 200, 215, 230, 245], "devic": [199, 200, 208, 210, 215, 223, 225, 230, 238, 240, 245, 253, 255, 284, 305, 323, 326, 327, 339, 361, 369], "seed": [199, 364], "deep": [23, 199, 200, 204, 211, 213, 214, 215, 219, 226, 228, 229, 230, 234, 241, 243, 244, 245, 249, 256, 258, 370], "learn": [23, 199, 200, 204, 211, 213, 214, 215, 219, 226, 228, 229, 230, 234, 241, 243, 244, 245, 249, 256, 258, 361, 362, 370], "move": [200, 210, 215, 225, 230, 240, 245, 255, 283, 284, 305, 326, 327, 339], "select": [200, 215, 230, 245, 260, 342, 345, 348, 351], "denorm": [202, 217, 232, 247], "mode": [203, 218, 233, 248, 287, 328, 368], "metric": [203, 212, 218, 227, 233, 242, 248, 257, 370], "val": [203, 218, 233, 248], "convert_numpi": [204, 219, 234, 249, 369], "return_prob": [204, 219, 234, 249], "stride": [204, 219, 234, 249, 297, 363], "convert": [204, 219, 234, 249, 326, 336, 369], "current_epoch": [207, 222, 237, 252], "epoch": [207, 212, 222, 227, 237, 242, 252, 257, 361, 362], "cuda": [208, 223, 238, 253, 314, 320, 326, 361, 369], "cpu": [208, 223, 238, 253, 326, 369], "loss_fn_param": [209, 224, 239, 254], "optimizer_param": [209, 224, 239, 254], "scheduler_param": [209, 224, 239, 254], "trainer": [209, 211, 224, 226, 239, 241, 254, 256], "loss": [209, 212, 224, 227, 239, 242, 254, 257], "optim": [209, 224, 239, 254, 284, 305, 312, 339, 340, 361, 362], "schedul": [209, 224, 239, 254, 361, 362], "dataloader_param": [211, 226, 241, 256], "trainer_param": [211, 226, 241, 256], "validate_param": [211, 226, 241, 256], "logger_param": [211, 226, 241, 256], "logger": [211, 226, 241, 256], "train_load": [212, 227, 242, 257], "dataload": [212, 227, 242, 257, 370], "max_epoch": [212, 227, 242, 257], "gradient_accumulation_factor": [212, 227, 242, 257], "one": [212, 227, 242, 257], "gradient": [212, 227, 242, 257, 317, 340], "accumul": [212, 227, 242, 257], "sampl": [212, 227, 242, 257], "count": [212, 227, 242, 257], "img_glob": [213, 228, 243, 258], "gt_glob": [213, 228, 243, 258], "drive": 260, "local": [260, 287, 321], "pretrained_model": 260, "appropri": 260, "nn": [260, 265, 296, 297, 307, 310, 326, 361, 362], "index_a": [262, 353], "index_b": [262, 353], "built": [262, 273, 353, 354], "bui": [262, 273, 353], "alia": [263, 319], "typevar": 263, "autoattribut": 263, "add": [264, 314, 320], "child": [264, 281, 309], "access": [264, 314, 320], "ad": [264, 310, 313, 315, 316, 317, 318, 320, 325, 369], "fn": 265, "callabl": [265, 313, 315, 316, 317], "t": [265, 279, 283, 284, 285, 287, 289, 298, 305, 315, 316, 321, 324, 327, 328, 337, 339], "recurs": [265, 280, 308, 311, 312], "everi": [265, 315, 316, 317], "submodul": [265, 280, 297, 308, 311, 312], "children": [265, 309], "self": [265, 279, 283, 284, 285, 287, 289, 290, 298, 305, 308, 311, 314, 321, 326, 327, 328, 337, 339], "typic": [265, 312, 314], "see": [265, 287, 294, 296, 297, 321, 324, 326, 328, 340], "init": 265, "doc": [265, 287, 321], "exampl": [265, 280, 297, 307, 308, 309, 310, 311, 312, 314, 325, 326, 369], "no_grad": [265, 369], "def": 265, "init_weight": 265, "print": [265, 280, 288, 307, 308, 309, 310, 311, 312], "linear": [265, 297, 307, 310, 326], "weight": [265, 325, 326], "fill_": 265, "net": [265, 307, 310], "sequenti": [265, 307, 310], "in_featur": [265, 297, 307, 310, 326], "out_featur": [265, 297, 307, 310, 326], "bia": [265, 297, 307, 310, 311, 325, 326], "requires_grad": [265, 321], "in_tensor": 266, "param": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 290, 293, 300, 301, 302, 303, 304, 311, 312, 320, 329, 330, 331, 332, 333, 369], "process": [268, 270, 271, 272, 274, 276, 277, 278], "tag": [270, 276], "keypoint": [271, 277, 303, 332], "gener": [273, 290, 293, 323, 358, 364], "static": [273, 342, 345, 348, 351], "geometr": [273, 370], "augment": 273, "cast": [279, 285, 289, 298, 326, 337], "buffer": [279, 283, 284, 285, 289, 294, 298, 305, 306, 308, 314, 325, 326, 327, 337, 339], "datatyp": [279, 285, 289, 298], "place": [279, 283, 284, 285, 289, 298, 305, 317, 321, 326, 337, 339], "iter": [280, 281, 307, 308, 309, 310, 311, 312], "yield": [280, 281, 307, 308, 309, 310, 311, 312], "direct": [280, 308, 311, 312], "member": [280, 308, 311, 312], "xdoctest": [280, 308, 309, 311, 312, 314, 325, 326], "skip": [280, 308, 309, 311, 312, 314, 325], "undefin": [280, 308, 309, 311, 312, 314, 325], "var": [280, 308, 309, 311, 312, 314, 325], "buf": [280, 308], "20l": [280, 312], "1l": [280, 312], "5l": [280, 312], "immedi": [281, 309], "gpu": [284, 361, 364], "make": [284, 305, 318, 339], "associ": [284, 305, 339], "object": [284, 295, 305, 325, 339], "so": [284, 297, 305, 339], "call": [284, 295, 297, 305, 313, 315, 316, 317, 318, 322, 326, 339], "befor": [284, 305, 316, 339], "live": [284, 305, 339], "while": [284, 305, 339], "being": [284, 305, 318, 325, 339], "copi": [284, 305, 306, 325, 327, 339], "evalu": [287, 328], "ha": [287, 297, 315, 328], "effect": [287, 315, 328], "particular": [287, 328], "detail": [287, 294, 296, 328, 340], "behavior": [287, 313, 314, 328, 364], "thei": [287, 328], "affect": [287, 318, 328], "dropout": [287, 328], "batchnorm": [287, 314, 328], "etc": [287, 328], "equival": 287, "disabl": [287, 321], "grad": [287, 321, 340], "comparison": [287, 321], "sever": [287, 321], "similar": [287, 321, 326, 340], "mechan": [287, 321], "extra": [288, 295, 322], "To": [288, 297], "own": 288, "both": [288, 308, 309, 310, 311, 318, 325, 367], "singl": [288, 316], "line": 288, "multi": 288, "accept": [288, 325, 326], "oper": [290, 314, 320, 321], "suit": 290, "pair": 290, "overrid": 290, "By": 290, "record": [290, 321], "_param": 290, "wish": 290, "save_kwarg": 290, "addition": 290, "batch_shap": [291, 292], "matric": 293, "throw": [294, 296, 297], "error": [294, 296, 297, 317, 318, 370], "docstr": [294, 296], "get_submodul": [294, 296], "more": [294, 296, 340, 369], "explan": [294, 296], "how": [294, 296, 297], "correctli": [294, 296], "fulli": [294, 296, 297], "qualifi": [294, 296, 297], "look": [294, 296, 297], "referenc": [294, 296, 297], "attributeerror": [294, 296, 297], "resolv": [294, 296, 297], "someth": [294, 296, 297], "state": [295, 314, 322, 325, 361, 362], "state_dict": [295, 306, 314, 320, 322], "set_extra_st": 295, "need": [295, 318, 322], "pickleabl": 295, "ensur": [295, 364], "serial": 295, "we": [295, 297, 316, 369], "backward": [295, 313, 317], "compat": [295, 370], "guarante": [295, 370], "break": 295, "pickl": 295, "form": 295, "For": [297, 314, 317], "let": 297, "sai": 297, "have": [297, 315, 316, 317, 318], "A": [297, 369], "like": 297, "net_b": 297, "net_c": 297, "conv": 297, "conv2d": 297, "16": 297, "33": [297, 344], "kernel_s": 297, "diagram": 297, "show": 297, "nest": 297, "itself": [297, 308, 309, 310, 311], "two": 297, "check": [297, 318, 338], "would": 297, "runtim": 297, "degre": [297, 370], "queri": 297, "against": 297, "named_modul": 297, "achiev": 297, "same": [297, 325], "o": [297, 369], "n": [297, 358, 369], "transit": 297, "simpl": 297, "some": [297, 370], "alwai": 297, "abov": 297, "3x3": 299, "ident": 299, "strict": [306, 318], "its": [306, 317, 322], "descend": 306, "exactli": 306, "persist": [306, 314, 325], "strictli": 306, "enforc": [306, 325], "namedtupl": [306, 318], "missing_kei": [306, 318], "unexpected_kei": [306, 318], "miss": [306, 318], "unexpect": [306, 318], "regist": [306, 313, 314, 315, 316, 317, 318], "runtimeerror": 306, "network": [307, 310], "duplic": [307, 310], "onc": [307, 310], "In": [307, 310, 326, 369], "l": [307, 310], "idx": [307, 310], "enumer": [307, 310], "prefix": [308, 310, 311, 325], "prepend": [308, 311], "running_var": 308, "conv4": 309, "conv5": 309, "memo": 310, "remove_dupl": 310, "alreadi": [310, 316], "hook": [313, 315, 316, 317, 318], "removablehandl": [313, 315, 316, 317, 318], "deprec": [313, 325], "favor": 313, "register_full_backward_hook": 313, "util": [313, 315, 316, 317, 318, 370], "handl": [313, 315, 316, 317, 318, 322], "running_mean": 314, "part": [314, 321], "alongsid": 314, "non": [314, 317, 326], "latter": 314, "run": [314, 318, 320, 325], "ignor": [314, 317, 320], "zero": [314, 340], "num_featur": 314, "forward": [315, 316, 317], "after": [315, 318], "signatur": [315, 316, 317, 318, 326], "won": [315, 316], "inplac": [315, 317, 318], "sinc": 315, "invok": 316, "wrap": 316, "unless": 316, "respect": [317, 326], "execut": 317, "grad_input": 317, "grad_output": 317, "subsequ": 317, "entri": 317, "technic": 317, "reason": 317, "receiv": 317, "view": 317, "similarli": [317, 369], "caller": 317, "post": 318, "load_state_dict": [318, 322], "incompatible_kei": 318, "consist": 318, "modif": 318, "thrown": 318, "clearn": 318, "out": [318, 369], "avoid": [318, 325], "add_modul": 319, "autograd": [321, 325], "help": 321, "freez": 321, "finetun": 321, "individu": 321, "gan": 321, "found": [322, 369], "get_extra_st": 322, "dtype": [323, 326, 337, 369], "random": [323, 358, 364], "reproduc": [323, 364], "across": 323, "share_memory_": 324, "destin": 325, "keep_var": 325, "whole": 325, "averag": 325, "shallow": 325, "order": 325, "howev": 325, "releas": 325, "design": 325, "end": 325, "ordereddict": 325, "compos": 325, "detach": 325, "non_block": 326, "memory_format": 326, "channels_last": 326, "Its": 326, "complex": 326, "integr": 326, "unchang": 326, "tri": 326, "asynchron": 326, "host": 326, "possibl": 326, "pin": 326, "memori": 326, "below": 326, "desir": [326, 327, 337, 368], "whose": 326, "4d": 326, "ignore_w": 326, "determinist": [326, 364], "1913": 326, "3420": 326, "5113": 326, "2325": 326, "doubl": 326, "float64": 326, "requir": 326, "env": 326, "torch_doctest_cuda1": 326, "gpu1": 326, "half": 326, "1914": 326, "5112": 326, "2324": 326, "float16": 326, "cdoubl": 326, "3741": 326, "2382": 326, "5593": 326, "4443": 326, "complex128": 326, "ones": 326, "6122": 326, "1150": 326, "without": 327, "storag": 327, "output_shap": 335, "standard": [335, 342, 345, 348, 351], "incom": 336, "h": [336, 358], "w": [336, 358], "c": [23, 336, 358], "b": 336, "dst_type": 337, "set_to_non": 340, "context": 340, "instead": 340, "mean": [341, 342, 344, 345, 347, 348, 350, 351, 360], "std": [341, 344, 347, 350], "ndbi_indic": 341, "ndvi_indic": 341, "bui_indic": 341, "preprocessor": [341, 344, 347, 350], "num_band": [342, 345, 348, 351], "deviat": [342, 345, 348, 351], "statist": [342, 345, 348, 351], "is_train": [343, 346, 349, 352], "p_hflip": [343, 346, 349, 352], "p_vflip": [343, 346, 349, 352], "p_mix_patch": [343, 346, 349, 352], "repeat": [343, 346, 349, 352], "dure": [343, 346, 349, 352, 362], "horizont": [343, 346, 349, 352], "flip": [343, 346, 349, 352], "vertic": [343, 346, 349, 352], "mix": [343, 346, 349, 352, 357], "58": 344, "52628466445192": 344, "63": 344, "99713552734609": 344, "73": 344, "72406260655546": 344, "67": 344, "19410871327327": 344, "506525138881113": 344, "32": 344, "3602409954395": 344, "81779753120669": 344, "294028783169907": 344, "05244060772832586": 347, "06419783589372872": 347, "09355600224058667": 347, "09683895508641474": 347, "20228001018199623": 347, "17475386334671822": 347, "1299458739828": 347, "295": 347, "2477865092859": 347, "03056170518168943": 347, "034643695523177205": 347, "042781807483223834": 347, "05637172934273404": 347, "09086194854765857": 347, "08659663887712442": 347, "0762477946322169": 347, "49": 347, "351306701659716": 347, "08163042661356694": 350, "10085783731931074": 350, "10701118915780652": 350, "20055640287459503": 350, "1701256492465244": 350, "12407282351539259": 350, "291": 350, "8235398823627": 350, "05398084773803982": 350, "05849992704495288": 350, "06925856941611415": 350, "08748855275238117": 350, "08646376806562776": 350, "07575478301131": 350, "48": 350, "37941596949521": 350, "anoth": [353, 368], "index_swir": 354, "index_nir": [354, 355, 356], "ndbi": 354, "shortwav": 354, "infrar": [354, 355, 356], "swir": 354, "Near": [354, 355, 356], "nir": [354, 355, 356], "index_r": 355, "veget": 355, "ndvi": 355, "red": 355, "index_green": 356, "water": 356, "ndwi": 356, "green": 356, "alpha": 357, "beta": [357, 358], "lam": 358, "lambda": 358, "bbx1": 358, "bby1": 358, "bbx2": 358, "bby2": 358, "pred": [360, 369], "original_s": 360, "combin": 360, "complet": 360, "entir": 360, "overlap": 360, "_lrschedul": [361, 362], "lr_schedul": [361, 362], "rate": [361, 362], "save_dir": 362, "filepath": 362, "sub_siz": 363, "output_meta": [366, 369], "blockxsiz": 366, "256": 366, "blockys": 366, "interleav": 366, "export": 366, "metadata": 366, "block": 366, "dimens": [366, 367], "open": [367, 368, 369], "tif": [367, 368, 369], "downsampl": [367, 368], "constant": 367, "height": 367, "width": 367, "ref": 368, "resampl": 368, "determin": 368, "featur": [369, 370], "urbanlc": 369, "them": 369, "import": 369, "landsatolitir": 369, "demo_data": 369, "bangkok_landsat8": 369, "139": 369, "6500": 369, "35": 369, "6764": 369, "18000": 369, "download_imag": 369, "FOR": 23, "rasterio": 369, "pathlib": 369, "tqdm": 369, "auto": 369, "export_geotiff": 369, "lcclassifi": 369, "is_avail": 369, "from_pretrain": 369, "pretrained_model_name_or_path": 369, "olitirs_resnet50": 369, "eval": 369, "landsat8_2022": 369, "output_path": 369, "demo_output": 369, "zip": 369, "len": 369, "land_cov": 369, "denormalize_class": 369, "makedir": 369, "parent": 369, "exist_ok": 369, "meta": 369, "uint8": 369, "nodata": 369, "python": 370, "librari": [369, 370], "pretrain": [369, 370], "further": 370, "analyz": 370, "visual": 370, "tutori": 370, "practition": 370, "pip": 370, "instal": [], "git": 370, "sincostanx": [], "link": 370, "worameth": [23, 370], "chinchuthakun": [23, 370], "maintain": 370, "climat": 370, "studi": 370, "lab": 370, "tokyo": 370, "institut": 370, "technologi": 370, "quickstart": 369, "jupyt": 369, "notebook": 369, "esa2021_download": 370, "landsat_download": 370, "baselin": 370, "deep_learn": 370, "train_util": 370, "pipeline_transform": 370, "depend": 370, "qualiti": 370, "coverag": 370, "radiometr": 370, "calibr": 370, "There": 370, "actual": 370, "past": [23, 370], "henc": 370, "strongli": 370, "advis": 370, "verifi": 370, "compar": 370, "ensembl": 370, "histor": 370, "increas": 370, "plausibl": 370, "hindcast": 370, "With": 370, "held": 370, "respons": 370, "decis": 370, "illustr": 369, "becaus": 369, "equip": 369, "area": 369, "squar": 369, "bangkok": 369, "thailand": 369, "case": 369, "upper": 369, "left": 369, "lower": 369, "right": 369, "period": 369, "switch": 369, "thing": 369, "obviou": 369, "wai": 369, "landsattm": 369, "except": 369, "fail": 369, "reach": 369, "orbit": 369, "landsatmss": 369, "multipl": 369, "support": 369, "simpli": 369, "text": 369, "automat": 369, "huggingfac": 369, "f": 369, "_resnet50": 369, "plot_landsat": 369, "plot_land_cov": 369, "lc": 369, "scheme": 369, "adopt": 369, "tokyotechguc": 370, "pyplot": 369, "plt": 369, "fig": 369, "subplot": 369, "15": 369, "read": 369, "chinchuthakun2024annu": 23, "agglomer": 23, "winderl": 23, "alvin": 23, "varquez": 23, "yukihiko": 23, "yamashita": 23, "manabu": 23, "kanda": 23, "jsce": 23, "23": 23, "16151": 23, "2024": 23, "2208": 23, "journalofjsc": 23}, "objects": {"": [[0, 0, 0, "-", "urbanlc"]], "urbanlc": [[1, 0, 0, "-", "analyze"], [6, 0, 0, "-", "downloader"], [13, 0, 0, "-", "model"], [365, 0, 0, "-", "utils"]], "urbanlc.analyze": [[2, 0, 0, "-", "constant"], [3, 0, 0, "-", "evaluate"], [24, 0, 0, "-", "metrics"], [31, 0, 0, "-", "visualizer"]], "urbanlc.analyze.metrics": [[25, 1, 1, "", "accuracy"], [26, 1, 1, "", "cohen_kappa"], [27, 1, 1, "", "confusion_matrix"], [28, 1, 1, "", "get_class_distribution"], [29, 1, 1, "", "producer_accuracy"], [30, 1, 1, "", "user_accuracy"]], "urbanlc.analyze.visualizer": [[32, 1, 1, "", "get_esa_colormap"], [33, 1, 1, "", "plot_change"], [34, 1, 1, "", "plot_class_distribution"], [35, 1, 1, "", "plot_land_cover"], [36, 1, 1, "", "plot_landsat"], [37, 1, 1, "", "show_esa_label"], [38, 1, 1, "", "visualize_data_batch"]], "urbanlc.downloader": [[39, 0, 0, "-", "base"], [8, 0, 0, "-", "downloader_constant"], [53, 0, 0, "-", "esa2021_downloader"], [10, 0, 0, "-", "general"], [62, 0, 0, "-", "landsat_downloader"], [12, 0, 0, "-", "logger"]], "urbanlc.downloader.base": [[40, 2, 1, "", "BaseDownloader"], [47, 2, 1, "", "BoundingBox"]], "urbanlc.downloader.base.BaseDownloader": [[41, 3, 1, "", "download_image"], [42, 3, 1, "", "download_images"], [43, 3, 1, "", "get_spatial_filter"], [44, 3, 1, "", "merge_patches"], [45, 3, 1, "", "remove_cache"], [46, 3, 1, "", "set_root"]], "urbanlc.downloader.base.BoundingBox": [[48, 4, 1, "", "bounds"], [49, 3, 1, "", "from_bounds"], [50, 3, 1, "", "from_point"], [51, 3, 1, "", "get_partition"], [52, 4, 1, "", "region"]], "urbanlc.downloader.esa2021_downloader": [[54, 2, 1, "", "ESAWorldCover"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover": [[55, 3, 1, "", "download_image"], [56, 3, 1, "", "download_images"], [57, 3, 1, "", "get_spatial_filter"], [58, 3, 1, "", "initialize"], [59, 3, 1, "", "merge_patches"], [60, 3, 1, "", "remove_cache"], [61, 3, 1, "", "set_root"]], "urbanlc.downloader.landsat_downloader": [[63, 2, 1, "", "LandsatMSS"], [74, 2, 1, "", "LandsatOLITIRS"], [85, 2, 1, "", "LandsatTM"], [96, 2, 1, "", "Landsat_Collection2"]], "urbanlc.downloader.landsat_downloader.LandsatMSS": [[64, 3, 1, "", "apply_scale_factors"], [65, 3, 1, "", "download_image"], [66, 3, 1, "", "download_images"], [67, 3, 1, "", "get_spatial_filter"], [68, 3, 1, "", "initialize"], [69, 3, 1, "", "mask_clouds"], [70, 3, 1, "", "merge_patches"], [71, 3, 1, "", "remove_cache"], [72, 3, 1, "", "retrieve_image"], [73, 3, 1, "", "set_root"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS": [[75, 3, 1, "", "apply_scale_factors"], [76, 3, 1, "", "download_image"], [77, 3, 1, "", "download_images"], [78, 3, 1, "", "get_spatial_filter"], [79, 3, 1, "", "initialize"], [80, 3, 1, "", "mask_clouds"], [81, 3, 1, "", "merge_patches"], [82, 3, 1, "", "remove_cache"], [83, 3, 1, "", "retrieve_image"], [84, 3, 1, "", "set_root"]], "urbanlc.downloader.landsat_downloader.LandsatTM": [[86, 3, 1, "", "apply_scale_factors"], [87, 3, 1, "", "download_image"], [88, 3, 1, "", "download_images"], [89, 3, 1, "", "get_spatial_filter"], [90, 3, 1, "", "initialize"], [91, 3, 1, "", "mask_clouds"], [92, 3, 1, "", "merge_patches"], [93, 3, 1, "", "remove_cache"], [94, 3, 1, "", "retrieve_image"], [95, 3, 1, "", "set_root"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2": [[97, 3, 1, "", "apply_scale_factors"], [98, 3, 1, "", "download_image"], [99, 3, 1, "", "download_images"], [100, 3, 1, "", "get_spatial_filter"], [101, 3, 1, "", "mask_clouds"], [102, 3, 1, "", "merge_patches"], [103, 3, 1, "", "remove_cache"], [104, 3, 1, "", "retrieve_image"], [105, 3, 1, "", "set_root"]], "urbanlc.model": [[106, 0, 0, "-", "base"], [114, 0, 0, "-", "baseline"], [159, 0, 0, "-", "dataloader"], [198, 0, 0, "-", "deep_learning"], [259, 0, 0, "-", "download"], [261, 0, 0, "-", "pipeline_transforms"], [359, 0, 0, "-", "train_utils"]], "urbanlc.model.base": [[107, 2, 1, "", "LCC"]], "urbanlc.model.base.LCC": [[108, 3, 1, "", "construct_transform_map"], [109, 3, 1, "", "infer"], [110, 3, 1, "", "load_model"], [111, 3, 1, "", "save_model"], [112, 3, 1, "", "train"], [113, 3, 1, "", "validate"]], "urbanlc.model.baseline": [[115, 2, 1, "", "BaselineLCC"], [126, 2, 1, "", "MSSBaseline"], [137, 2, 1, "", "OLI_TIRSBaseline"], [148, 2, 1, "", "TMBaseline"]], "urbanlc.model.baseline.BaselineLCC": [[116, 3, 1, "", "build_model"], [117, 3, 1, "", "construct_transform_map"], [118, 3, 1, "", "infer"], [119, 3, 1, "", "load_model"], [120, 3, 1, "", "retrieve_images"], [121, 3, 1, "", "save_model"], [122, 3, 1, "", "train"], [123, 3, 1, "", "transform_pipeline"], [124, 3, 1, "", "update_transform_map"], [125, 3, 1, "", "validate"]], "urbanlc.model.baseline.MSSBaseline": [[127, 3, 1, "", "build_model"], [128, 3, 1, "", "construct_transform_map"], [129, 3, 1, "", "infer"], [130, 3, 1, "", "load_model"], [131, 3, 1, "", "retrieve_images"], [132, 3, 1, "", "save_model"], [133, 3, 1, "", "train"], [134, 3, 1, "", "transform_pipeline"], [135, 3, 1, "", "update_transform_map"], [136, 3, 1, "", "validate"]], "urbanlc.model.baseline.OLI_TIRSBaseline": [[138, 3, 1, "", "build_model"], [139, 3, 1, "", "construct_transform_map"], [140, 3, 1, "", "infer"], [141, 3, 1, "", "load_model"], [142, 3, 1, "", "retrieve_images"], [143, 3, 1, "", "save_model"], [144, 3, 1, "", "train"], [145, 3, 1, "", "transform_pipeline"], [146, 3, 1, "", "update_transform_map"], [147, 3, 1, "", "validate"]], "urbanlc.model.baseline.TMBaseline": [[149, 3, 1, "", "build_model"], [150, 3, 1, "", "construct_transform_map"], [151, 3, 1, "", "infer"], [152, 3, 1, "", "load_model"], [153, 3, 1, "", "retrieve_images"], [154, 3, 1, "", "save_model"], [155, 3, 1, "", "train"], [156, 3, 1, "", "transform_pipeline"], [157, 3, 1, "", "update_transform_map"], [158, 3, 1, "", "validate"]], "urbanlc.model.dataloader": [[160, 2, 1, "", "CustomRasterDataset"], [171, 2, 1, "", "ESA2021"], [182, 2, 1, "", "Landsat"], [196, 1, 1, "", "get_dataloader"], [197, 1, 1, "", "parse_paths"]], "urbanlc.model.dataloader.CustomRasterDataset": [[161, 4, 1, "", "all_bands"], [162, 5, 1, "", "bounds"], [163, 4, 1, "", "cmap"], [164, 5, 1, "", "crs"], [165, 4, 1, "", "date_format"], [166, 4, 1, "", "filename_glob"], [167, 4, 1, "", "filename_regex"], [168, 4, 1, "", "is_image"], [169, 4, 1, "", "rgb_bands"], [170, 4, 1, "", "separate_files"]], "urbanlc.model.dataloader.ESA2021": [[172, 4, 1, "", "all_bands"], [173, 5, 1, "", "bounds"], [174, 4, 1, "", "cmap"], [175, 5, 1, "", "crs"], [176, 4, 1, "", "date_format"], [177, 4, 1, "", "filename_glob"], [178, 4, 1, "", "filename_regex"], [179, 4, 1, "", "is_image"], [180, 4, 1, "", "rgb_bands"], [181, 4, 1, "", "separate_files"]], "urbanlc.model.dataloader.Landsat": [[183, 3, 1, "", "MSS"], [184, 3, 1, "", "OLITIRS"], [185, 3, 1, "", "TM"], [186, 4, 1, "", "all_bands"], [187, 5, 1, "", "bounds"], [188, 4, 1, "", "cmap"], [189, 5, 1, "", "crs"], [190, 4, 1, "", "date_format"], [191, 4, 1, "", "filename_glob"], [192, 4, 1, "", "filename_regex"], [193, 4, 1, "", "is_image"], [194, 4, 1, "", "rgb_bands"], [195, 4, 1, "", "separate_files"]], "urbanlc.model.deep_learning": [[199, 2, 1, "", "DeepLearningLCC"], [214, 2, 1, "", "MSSDeepLearning"], [229, 2, 1, "", "OLITIRSDeepLearning"], [244, 2, 1, "", "TMDeepLearning"]], "urbanlc.model.deep_learning.DeepLearningLCC": [[200, 3, 1, "", "build_model"], [201, 3, 1, "", "construct_transform_map"], [202, 3, 1, "", "denormalize_class"], [203, 3, 1, "", "get_metrics"], [204, 3, 1, "", "infer"], [205, 3, 1, "", "load_model"], [206, 3, 1, "", "normalize_class"], [207, 3, 1, "", "save_model"], [208, 3, 1, "", "set_device"], [209, 3, 1, "", "setup_trainer"], [210, 3, 1, "", "to"], [211, 3, 1, "", "train"], [212, 3, 1, "", "train_one_epoch"], [213, 3, 1, "", "validate"]], "urbanlc.model.deep_learning.MSSDeepLearning": [[215, 3, 1, "", "build_model"], [216, 3, 1, "", "construct_transform_map"], [217, 3, 1, "", "denormalize_class"], [218, 3, 1, "", "get_metrics"], [219, 3, 1, "", "infer"], [220, 3, 1, "", "load_model"], [221, 3, 1, "", "normalize_class"], [222, 3, 1, "", "save_model"], [223, 3, 1, "", "set_device"], [224, 3, 1, "", "setup_trainer"], [225, 3, 1, "", "to"], [226, 3, 1, "", "train"], [227, 3, 1, "", "train_one_epoch"], [228, 3, 1, "", "validate"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning": [[230, 3, 1, "", "build_model"], [231, 3, 1, "", "construct_transform_map"], [232, 3, 1, "", "denormalize_class"], [233, 3, 1, "", "get_metrics"], [234, 3, 1, "", "infer"], [235, 3, 1, "", "load_model"], [236, 3, 1, "", "normalize_class"], [237, 3, 1, "", "save_model"], [238, 3, 1, "", "set_device"], [239, 3, 1, "", "setup_trainer"], [240, 3, 1, "", "to"], [241, 3, 1, "", "train"], [242, 3, 1, "", "train_one_epoch"], [243, 3, 1, "", "validate"]], "urbanlc.model.deep_learning.TMDeepLearning": [[245, 3, 1, "", "build_model"], [246, 3, 1, "", "construct_transform_map"], [247, 3, 1, "", "denormalize_class"], [248, 3, 1, "", "get_metrics"], [249, 3, 1, "", "infer"], [250, 3, 1, "", "load_model"], [251, 3, 1, "", "normalize_class"], [252, 3, 1, "", "save_model"], [253, 3, 1, "", "set_device"], [254, 3, 1, "", "setup_trainer"], [255, 3, 1, "", "to"], [256, 3, 1, "", "train"], [257, 3, 1, "", "train_one_epoch"], [258, 3, 1, "", "validate"]], "urbanlc.model.download": [[260, 1, 1, "", "download_model"]], "urbanlc.model.pipeline_transforms": [[262, 2, 1, "", "AppendBUI"], [341, 2, 1, "", "LandsatTransformer"], [344, 2, 1, "", "MSSTransformer"], [347, 2, 1, "", "OLITIRSTransformer"], [350, 2, 1, "", "TMTransformer"], [353, 1, 1, "", "compute_BUI"], [354, 1, 1, "", "compute_NDBI"], [355, 1, 1, "", "compute_NDVI"], [356, 1, 1, "", "compute_NDWI"], [357, 1, 1, "", "mix_patch"], [358, 1, 1, "", "rand_bbox"]], "urbanlc.model.pipeline_transforms.AppendBUI": [[263, 4, 1, "", "T_destination"], [264, 3, 1, "", "add_module"], [265, 3, 1, "", "apply"], [266, 3, 1, "", "apply_func"], [267, 3, 1, "", "apply_non_transform"], [268, 3, 1, "", "apply_non_transform_box"], [269, 3, 1, "", "apply_non_transform_boxes"], [270, 3, 1, "", "apply_non_transform_class"], [271, 3, 1, "", "apply_non_transform_keypoint"], [272, 3, 1, "", "apply_non_transform_mask"], [273, 3, 1, "", "apply_transform"], [274, 3, 1, "", "apply_transform_box"], [275, 3, 1, "", "apply_transform_boxes"], [276, 3, 1, "", "apply_transform_class"], [277, 3, 1, "", "apply_transform_keypoint"], [278, 3, 1, "", "apply_transform_mask"], [279, 3, 1, "", "bfloat16"], [280, 3, 1, "", "buffers"], [281, 3, 1, "", "children"], [282, 3, 1, "", "compute_transformation"], [283, 3, 1, "", "cpu"], [284, 3, 1, "", "cuda"], [285, 3, 1, "", "double"], [286, 4, 1, "", "dump_patches"], [287, 3, 1, "", "eval"], [288, 3, 1, "", "extra_repr"], [289, 3, 1, "", "float"], [290, 3, 1, "", "forward"], [291, 3, 1, "", "forward_parameters"], [292, 3, 1, "", "generate_parameters"], [293, 3, 1, "", "generate_transformation_matrix"], [294, 3, 1, "", "get_buffer"], [295, 3, 1, "", "get_extra_state"], [296, 3, 1, "", "get_parameter"], [297, 3, 1, "", "get_submodule"], [298, 3, 1, "", "half"], [299, 3, 1, "", "identity_matrix"], [300, 3, 1, "", "inverse_boxes"], [301, 3, 1, "", "inverse_classes"], [302, 3, 1, "", "inverse_inputs"], [303, 3, 1, "", "inverse_keypoints"], [304, 3, 1, "", "inverse_masks"], [305, 3, 1, "", "ipu"], [306, 3, 1, "", "load_state_dict"], [307, 3, 1, "", "modules"], [308, 3, 1, "", "named_buffers"], [309, 3, 1, "", "named_children"], [310, 3, 1, "", "named_modules"], [311, 3, 1, "", "named_parameters"], [312, 3, 1, "", "parameters"], [313, 3, 1, "", "register_backward_hook"], [314, 3, 1, "", "register_buffer"], [315, 3, 1, "", "register_forward_hook"], [316, 3, 1, "", "register_forward_pre_hook"], [317, 3, 1, "", "register_full_backward_hook"], [318, 3, 1, "", "register_load_state_dict_post_hook"], [319, 3, 1, "", "register_module"], [320, 3, 1, "", "register_parameter"], [321, 3, 1, "", "requires_grad_"], [322, 3, 1, "", "set_extra_state"], [323, 3, 1, "", "set_rng_device_and_dtype"], [324, 3, 1, "", "share_memory"], [325, 3, 1, "", "state_dict"], [326, 3, 1, "", "to"], [327, 3, 1, "", "to_empty"], [328, 3, 1, "", "train"], [329, 3, 1, "", "transform_boxes"], [330, 3, 1, "", "transform_classes"], [331, 3, 1, "", "transform_inputs"], [332, 3, 1, "", "transform_keypoints"], [333, 3, 1, "", "transform_masks"], [334, 5, 1, "", "transform_matrix"], [335, 3, 1, "", "transform_output_tensor"], [336, 3, 1, "", "transform_tensor"], [337, 3, 1, "", "type"], [338, 3, 1, "", "validate_tensor"], [339, 3, 1, "", "xpu"], [340, 3, 1, "", "zero_grad"]], "urbanlc.model.pipeline_transforms.LandsatTransformer": [[342, 3, 1, "", "calculate_statistics"], [343, 3, 1, "", "transform"]], "urbanlc.model.pipeline_transforms.MSSTransformer": [[345, 3, 1, "", "calculate_statistics"], [346, 3, 1, "", "transform"]], "urbanlc.model.pipeline_transforms.OLITIRSTransformer": [[348, 3, 1, "", "calculate_statistics"], [349, 3, 1, "", "transform"]], "urbanlc.model.pipeline_transforms.TMTransformer": [[351, 3, 1, "", "calculate_statistics"], [352, 3, 1, "", "transform"]], "urbanlc.model.train_utils": [[360, 1, 1, "", "combine_prediction"], [361, 1, 1, "", "load_checkpoint"], [362, 1, 1, "", "save_checkpoint"], [363, 1, 1, "", "segment_satelite_image"], [364, 1, 1, "", "set_seed"]], "urbanlc.utils": [[366, 1, 1, "", "export_geotiff"], [367, 1, 1, "", "open_at_scale"], [368, 1, 1, "", "open_at_size"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"urbanlc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370], "analyz": [1, 2, 3, 4, 5, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "constant": 2, "evalu": 3, "metric": [4, 24, 25, 26, 27, 28, 29, 30], "visual": [5, 31, 32, 33, 34, 35, 36, 37, 38, 369], "download": [6, 7, 8, 9, 10, 11, 12, 18, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 259, 260, 369], "base": [7, 14, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 106, 107, 108, 109, 110, 111, 112, 113], "downloader_const": 8, "esa2021_download": [9, 53, 54, 55, 56, 57, 58, 59, 60, 61], "gener": 10, "landsat_download": [11, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "logger": 12, "model": [13, 14, 15, 16, 17, 18, 19, 20, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "baselin": [15, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "dataload": [16, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "deep_learn": [17, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "pipeline_transform": [19, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "train_util": [20, 359, 360, 361, 362, 363, 364], "util": [21, 365, 366, 367, 368], "refer": [23, 370], "other": 23, "relat": 23, "citat": 23, "visit": 23, "u": 23, "accuraci": 25, "cohen_kappa": 26, "confusion_matrix": 27, "get_class_distribut": 28, "producer_accuraci": 29, "user_accuraci": 30, "get_esa_colormap": 32, "plot_chang": 33, "plot_class_distribut": 34, "plot_land_cov": 35, "plot_landsat": 36, "show_esa_label": 37, "visualize_data_batch": 38, "basedownload": [40, 41, 42, 43, 44, 45, 46], "download_imag": [41, 42, 55, 56, 65, 66, 76, 77, 87, 88, 98, 99], "get_spatial_filt": [43, 57, 67, 78, 89, 100], "merge_patch": [44, 59, 70, 81, 92, 102], "remove_cach": [45, 60, 71, 82, 93, 103], "set_root": [46, 61, 73, 84, 95, 105], "boundingbox": [47, 48, 49, 50, 51, 52], "bound": [48, 162, 173, 187], "from_bound": 49, "from_point": 50, "get_partit": 51, "region": 52, "esaworldcov": [54, 55, 56, 57, 58, 59, 60, 61], "initi": [58, 68, 79, 90], "landsatmss": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "apply_scale_factor": [64, 75, 86, 97], "mask_cloud": [69, 80, 91, 101], "retrieve_imag": [72, 83, 94, 104, 120, 131, 142, 153], "landsatolitir": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "landsattm": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "landsat_collection2": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "lcc": [107, 108, 109, 110, 111, 112, 113], "construct_transform_map": [108, 117, 128, 139, 150, 201, 216, 231, 246], "infer": [109, 118, 129, 140, 151, 204, 219, 234, 249], "load_model": [110, 119, 130, 141, 152, 205, 220, 235, 250], "save_model": [111, 121, 132, 143, 154, 207, 222, 237, 252], "train": [112, 122, 133, 144, 155, 211, 226, 241, 256, 328], "valid": [113, 125, 136, 147, 158, 213, 228, 243, 258], "baselinelcc": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "build_model": [116, 127, 138, 149, 200, 215, 230, 245], "transform_pipelin": [123, 134, 145, 156], "update_transform_map": [124, 135, 146, 157], "mssbaselin": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "oli_tirsbaselin": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "tmbaselin": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "customrasterdataset": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "all_band": [161, 172, 186], "cmap": [163, 174, 188], "cr": [164, 175, 189], "date_format": [165, 176, 190], "filename_glob": [166, 177, 191], "filename_regex": [167, 178, 192], "is_imag": [168, 179, 193], "rgb_band": [169, 180, 194], "separate_fil": [170, 181, 195], "esa2021": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "landsat": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 369], "mss": 183, "olitir": 184, "tm": 185, "get_dataload": 196, "parse_path": 197, "deeplearninglcc": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "denormalize_class": [202, 217, 232, 247], "get_metr": [203, 218, 233, 248], "normalize_class": [206, 221, 236, 251], "set_devic": [208, 223, 238, 253], "setup_train": [209, 224, 239, 254], "train_one_epoch": [212, 227, 242, 257], "mssdeeplearn": [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "olitirsdeeplearn": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "tmdeeplearn": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "download_model": 260, "appendbui": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "t_destin": 263, "add_modul": 264, "appli": 265, "apply_func": 266, "apply_non_transform": 267, "apply_non_transform_box": [268, 269], "apply_non_transform_class": 270, "apply_non_transform_keypoint": 271, "apply_non_transform_mask": 272, "apply_transform": 273, "apply_transform_box": [274, 275], "apply_transform_class": 276, "apply_transform_keypoint": 277, "apply_transform_mask": 278, "bfloat16": 279, "buffer": 280, "children": 281, "compute_transform": 282, "cpu": 283, "cuda": 284, "doubl": 285, "dump_patch": 286, "eval": 287, "extra_repr": 288, "float": 289, "forward": 290, "forward_paramet": 291, "generate_paramet": 292, "generate_transformation_matrix": 293, "get_buff": 294, "get_extra_st": 295, "get_paramet": 296, "get_submodul": 297, "half": 298, "identity_matrix": 299, "inverse_box": 300, "inverse_class": 301, "inverse_input": 302, "inverse_keypoint": 303, "inverse_mask": 304, "ipu": 305, "load_state_dict": 306, "modul": 307, "named_buff": 308, "named_children": 309, "named_modul": 310, "named_paramet": 311, "paramet": 312, "register_backward_hook": 313, "register_buff": 314, "register_forward_hook": 315, "register_forward_pre_hook": 316, "register_full_backward_hook": 317, "register_load_state_dict_post_hook": 318, "register_modul": 319, "register_paramet": 320, "requires_grad_": 321, "set_extra_st": 322, "set_rng_device_and_dtyp": 323, "share_memori": 324, "state_dict": 325, "to_empti": 327, "transform_box": 329, "transform_class": 330, "transform_input": 331, "transform_keypoint": 332, "transform_mask": 333, "transform_matrix": 334, "transform_output_tensor": 335, "transform_tensor": 336, "type": 337, "validate_tensor": 338, "xpu": 339, "zero_grad": 340, "landsattransform": [341, 342, 343], "calculate_statist": [342, 345, 348, 351], "transform": [343, 346, 349, 352], "msstransform": [344, 345, 346], "olitirstransform": [347, 348, 349], "tmtransform": [350, 351, 352], "compute_bui": 353, "compute_ndbi": 354, "compute_ndvi": 355, "compute_ndwi": 356, "mix_patch": 357, "rand_bbox": 358, "combine_predict": 360, "load_checkpoint": 361, "save_checkpoint": 362, "segment_satelite_imag": 363, "set_se": 364, "export_geotiff": 366, "open_at_scal": 367, "open_at_s": 368, "get": 369, "start": 369, "data": 369, "predict": 369, "land": 369, "cover": 369, "map": 369, "result": 369, "document": 370, "introduct": 370, "disclaim": 370, "api": 370, "test": 372, "tabl": 370, "content": 370, "instal": 370}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"urbanlc": [[0, "module-urbanlc"]], "urbanlc.analyze": [[1, "module-urbanlc.analyze"]], "urbanlc.analyze.constant": [[2, "module-urbanlc.analyze.constant"]], "urbanlc.analyze.evaluate": [[3, "module-urbanlc.analyze.evaluate"]], "urbanlc.analyze.metrics": [[4, "module-urbanlc.analyze.metrics"], [24, "module-urbanlc.analyze.metrics"]], "urbanlc.analyze.visualizer": [[5, "module-urbanlc.analyze.visualizer"], [31, "module-urbanlc.analyze.visualizer"]], "urbanlc.downloader": [[6, "module-urbanlc.downloader"]], "urbanlc.downloader.base": [[7, "module-urbanlc.downloader.base"], [39, "module-urbanlc.downloader.base"]], "urbanlc.downloader.downloader_constant": [[8, "module-urbanlc.downloader.downloader_constant"]], "urbanlc.downloader.esa2021_downloader": [[9, "module-urbanlc.downloader.esa2021_downloader"], [53, "module-urbanlc.downloader.esa2021_downloader"]], "urbanlc.downloader.general": [[10, "module-urbanlc.downloader.general"]], "urbanlc.downloader.landsat_downloader": [[11, "module-urbanlc.downloader.landsat_downloader"], [62, "module-urbanlc.downloader.landsat_downloader"]], "urbanlc.downloader.logger": [[12, "module-urbanlc.downloader.logger"]], "urbanlc.model": [[13, "module-urbanlc.model"]], "urbanlc.model.base": [[14, "module-urbanlc.model.base"], [106, "module-urbanlc.model.base"]], "urbanlc.model.baseline": [[15, "module-urbanlc.model.baseline"], [114, "module-urbanlc.model.baseline"]], "urbanlc.model.dataloader": [[16, "module-urbanlc.model.dataloader"], [159, "module-urbanlc.model.dataloader"]], "urbanlc.model.deep_learning": [[17, "module-urbanlc.model.deep_learning"], [198, "module-urbanlc.model.deep_learning"]], "urbanlc.model.download": [[18, "module-urbanlc.model.download"], [259, "module-urbanlc.model.download"]], "urbanlc.model.pipeline_transforms": [[19, "module-urbanlc.model.pipeline_transforms"], [261, "module-urbanlc.model.pipeline_transforms"]], "urbanlc.model.train_utils": [[20, "module-urbanlc.model.train_utils"], [359, "module-urbanlc.model.train_utils"]], "urbanlc.utils": [[21, "module-urbanlc.utils"], [365, "module-urbanlc.utils"]], "urbanlc.analyze.metrics.accuracy": [[25, "urbanlc-analyze-metrics-accuracy"]], "urbanlc.analyze.metrics.cohen_kappa": [[26, "urbanlc-analyze-metrics-cohen-kappa"]], "urbanlc.analyze.metrics.confusion_matrix": [[27, "urbanlc-analyze-metrics-confusion-matrix"]], "urbanlc.analyze.metrics.get_class_distribution": [[28, "urbanlc-analyze-metrics-get-class-distribution"]], "urbanlc.analyze.metrics.producer_accuracy": [[29, "urbanlc-analyze-metrics-producer-accuracy"]], "urbanlc.analyze.metrics.user_accuracy": [[30, "urbanlc-analyze-metrics-user-accuracy"]], "urbanlc.analyze.visualizer.get_esa_colormap": [[32, "urbanlc-analyze-visualizer-get-esa-colormap"]], "urbanlc.analyze.visualizer.plot_change": [[33, "urbanlc-analyze-visualizer-plot-change"]], "urbanlc.analyze.visualizer.plot_class_distribution": [[34, "urbanlc-analyze-visualizer-plot-class-distribution"]], "urbanlc.analyze.visualizer.plot_land_cover": [[35, "urbanlc-analyze-visualizer-plot-land-cover"]], "urbanlc.analyze.visualizer.plot_landsat": [[36, "urbanlc-analyze-visualizer-plot-landsat"]], "urbanlc.analyze.visualizer.show_esa_label": [[37, "urbanlc-analyze-visualizer-show-esa-label"]], "urbanlc.analyze.visualizer.visualize_data_batch": [[38, "urbanlc-analyze-visualizer-visualize-data-batch"]], "urbanlc.downloader.base.BaseDownloader": [[40, "urbanlc-downloader-base-basedownloader"]], "urbanlc.downloader.base.BaseDownloader.download_image": [[41, "urbanlc-downloader-base-basedownloader-download-image"]], "urbanlc.downloader.base.BaseDownloader.download_images": [[42, "urbanlc-downloader-base-basedownloader-download-images"]], "urbanlc.downloader.base.BaseDownloader.get_spatial_filter": [[43, "urbanlc-downloader-base-basedownloader-get-spatial-filter"]], "urbanlc.downloader.base.BaseDownloader.merge_patches": [[44, "urbanlc-downloader-base-basedownloader-merge-patches"]], "urbanlc.downloader.base.BaseDownloader.remove_cache": [[45, "urbanlc-downloader-base-basedownloader-remove-cache"]], "urbanlc.downloader.base.BaseDownloader.set_root": [[46, "urbanlc-downloader-base-basedownloader-set-root"]], "urbanlc.downloader.base.BoundingBox": [[47, "urbanlc-downloader-base-boundingbox"]], "urbanlc.downloader.base.BoundingBox.bounds": [[48, "urbanlc-downloader-base-boundingbox-bounds"]], "urbanlc.downloader.base.BoundingBox.from_bounds": [[49, "urbanlc-downloader-base-boundingbox-from-bounds"]], "urbanlc.downloader.base.BoundingBox.from_point": [[50, "urbanlc-downloader-base-boundingbox-from-point"]], "urbanlc.downloader.base.BoundingBox.get_partition": [[51, "urbanlc-downloader-base-boundingbox-get-partition"]], "urbanlc.downloader.base.BoundingBox.region": [[52, "urbanlc-downloader-base-boundingbox-region"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover": [[54, "urbanlc-downloader-esa2021-downloader-esaworldcover"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover.download_image": [[55, "urbanlc-downloader-esa2021-downloader-esaworldcover-download-image"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover.download_images": [[56, "urbanlc-downloader-esa2021-downloader-esaworldcover-download-images"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover.get_spatial_filter": [[57, "urbanlc-downloader-esa2021-downloader-esaworldcover-get-spatial-filter"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover.initialize": [[58, "urbanlc-downloader-esa2021-downloader-esaworldcover-initialize"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover.merge_patches": [[59, "urbanlc-downloader-esa2021-downloader-esaworldcover-merge-patches"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover.remove_cache": [[60, "urbanlc-downloader-esa2021-downloader-esaworldcover-remove-cache"]], "urbanlc.downloader.esa2021_downloader.ESAWorldCover.set_root": [[61, "urbanlc-downloader-esa2021-downloader-esaworldcover-set-root"]], "urbanlc.downloader.landsat_downloader.LandsatMSS": [[63, "urbanlc-downloader-landsat-downloader-landsatmss"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.apply_scale_factors": [[64, "urbanlc-downloader-landsat-downloader-landsatmss-apply-scale-factors"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.download_image": [[65, "urbanlc-downloader-landsat-downloader-landsatmss-download-image"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.download_images": [[66, "urbanlc-downloader-landsat-downloader-landsatmss-download-images"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.get_spatial_filter": [[67, "urbanlc-downloader-landsat-downloader-landsatmss-get-spatial-filter"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.initialize": [[68, "urbanlc-downloader-landsat-downloader-landsatmss-initialize"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.mask_clouds": [[69, "urbanlc-downloader-landsat-downloader-landsatmss-mask-clouds"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.merge_patches": [[70, "urbanlc-downloader-landsat-downloader-landsatmss-merge-patches"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.remove_cache": [[71, "urbanlc-downloader-landsat-downloader-landsatmss-remove-cache"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.retrieve_image": [[72, "urbanlc-downloader-landsat-downloader-landsatmss-retrieve-image"]], "urbanlc.downloader.landsat_downloader.LandsatMSS.set_root": [[73, "urbanlc-downloader-landsat-downloader-landsatmss-set-root"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS": [[74, "urbanlc-downloader-landsat-downloader-landsatolitirs"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.apply_scale_factors": [[75, "urbanlc-downloader-landsat-downloader-landsatolitirs-apply-scale-factors"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.download_image": [[76, "urbanlc-downloader-landsat-downloader-landsatolitirs-download-image"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.download_images": [[77, "urbanlc-downloader-landsat-downloader-landsatolitirs-download-images"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.get_spatial_filter": [[78, "urbanlc-downloader-landsat-downloader-landsatolitirs-get-spatial-filter"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.initialize": [[79, "urbanlc-downloader-landsat-downloader-landsatolitirs-initialize"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.mask_clouds": [[80, "urbanlc-downloader-landsat-downloader-landsatolitirs-mask-clouds"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.merge_patches": [[81, "urbanlc-downloader-landsat-downloader-landsatolitirs-merge-patches"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.remove_cache": [[82, "urbanlc-downloader-landsat-downloader-landsatolitirs-remove-cache"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.retrieve_image": [[83, "urbanlc-downloader-landsat-downloader-landsatolitirs-retrieve-image"]], "urbanlc.downloader.landsat_downloader.LandsatOLITIRS.set_root": [[84, "urbanlc-downloader-landsat-downloader-landsatolitirs-set-root"]], "urbanlc.downloader.landsat_downloader.LandsatTM": [[85, "urbanlc-downloader-landsat-downloader-landsattm"]], "urbanlc.downloader.landsat_downloader.LandsatTM.apply_scale_factors": [[86, "urbanlc-downloader-landsat-downloader-landsattm-apply-scale-factors"]], "urbanlc.downloader.landsat_downloader.LandsatTM.download_image": [[87, "urbanlc-downloader-landsat-downloader-landsattm-download-image"]], "urbanlc.downloader.landsat_downloader.LandsatTM.download_images": [[88, "urbanlc-downloader-landsat-downloader-landsattm-download-images"]], "urbanlc.downloader.landsat_downloader.LandsatTM.get_spatial_filter": [[89, "urbanlc-downloader-landsat-downloader-landsattm-get-spatial-filter"]], "urbanlc.downloader.landsat_downloader.LandsatTM.initialize": [[90, "urbanlc-downloader-landsat-downloader-landsattm-initialize"]], "urbanlc.downloader.landsat_downloader.LandsatTM.mask_clouds": [[91, "urbanlc-downloader-landsat-downloader-landsattm-mask-clouds"]], "urbanlc.downloader.landsat_downloader.LandsatTM.merge_patches": [[92, "urbanlc-downloader-landsat-downloader-landsattm-merge-patches"]], "urbanlc.downloader.landsat_downloader.LandsatTM.remove_cache": [[93, "urbanlc-downloader-landsat-downloader-landsattm-remove-cache"]], "urbanlc.downloader.landsat_downloader.LandsatTM.retrieve_image": [[94, "urbanlc-downloader-landsat-downloader-landsattm-retrieve-image"]], "urbanlc.downloader.landsat_downloader.LandsatTM.set_root": [[95, "urbanlc-downloader-landsat-downloader-landsattm-set-root"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2": [[96, "urbanlc-downloader-landsat-downloader-landsat-collection2"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.apply_scale_factors": [[97, "urbanlc-downloader-landsat-downloader-landsat-collection2-apply-scale-factors"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.download_image": [[98, "urbanlc-downloader-landsat-downloader-landsat-collection2-download-image"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.download_images": [[99, "urbanlc-downloader-landsat-downloader-landsat-collection2-download-images"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.get_spatial_filter": [[100, "urbanlc-downloader-landsat-downloader-landsat-collection2-get-spatial-filter"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.mask_clouds": [[101, "urbanlc-downloader-landsat-downloader-landsat-collection2-mask-clouds"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.merge_patches": [[102, "urbanlc-downloader-landsat-downloader-landsat-collection2-merge-patches"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.remove_cache": [[103, "urbanlc-downloader-landsat-downloader-landsat-collection2-remove-cache"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.retrieve_image": [[104, "urbanlc-downloader-landsat-downloader-landsat-collection2-retrieve-image"]], "urbanlc.downloader.landsat_downloader.Landsat_Collection2.set_root": [[105, "urbanlc-downloader-landsat-downloader-landsat-collection2-set-root"]], "urbanlc.model.base.LCC": [[107, "urbanlc-model-base-lcc"]], "urbanlc.model.base.LCC.construct_transform_map": [[108, "urbanlc-model-base-lcc-construct-transform-map"]], "urbanlc.model.base.LCC.infer": [[109, "urbanlc-model-base-lcc-infer"]], "urbanlc.model.base.LCC.load_model": [[110, "urbanlc-model-base-lcc-load-model"]], "urbanlc.model.base.LCC.save_model": [[111, "urbanlc-model-base-lcc-save-model"]], "urbanlc.model.base.LCC.train": [[112, "urbanlc-model-base-lcc-train"]], "urbanlc.model.base.LCC.validate": [[113, "urbanlc-model-base-lcc-validate"]], "urbanlc.model.baseline.BaselineLCC": [[115, "urbanlc-model-baseline-baselinelcc"]], "urbanlc.model.baseline.BaselineLCC.build_model": [[116, "urbanlc-model-baseline-baselinelcc-build-model"]], "urbanlc.model.baseline.BaselineLCC.construct_transform_map": [[117, "urbanlc-model-baseline-baselinelcc-construct-transform-map"]], "urbanlc.model.baseline.BaselineLCC.infer": [[118, "urbanlc-model-baseline-baselinelcc-infer"]], "urbanlc.model.baseline.BaselineLCC.load_model": [[119, "urbanlc-model-baseline-baselinelcc-load-model"]], "urbanlc.model.baseline.BaselineLCC.retrieve_images": [[120, "urbanlc-model-baseline-baselinelcc-retrieve-images"]], "urbanlc.model.baseline.BaselineLCC.save_model": [[121, "urbanlc-model-baseline-baselinelcc-save-model"]], "urbanlc.model.baseline.BaselineLCC.train": [[122, "urbanlc-model-baseline-baselinelcc-train"]], "urbanlc.model.baseline.BaselineLCC.transform_pipeline": [[123, "urbanlc-model-baseline-baselinelcc-transform-pipeline"]], "urbanlc.model.baseline.BaselineLCC.update_transform_map": [[124, "urbanlc-model-baseline-baselinelcc-update-transform-map"]], "urbanlc.model.baseline.BaselineLCC.validate": [[125, "urbanlc-model-baseline-baselinelcc-validate"]], "urbanlc.model.baseline.MSSBaseline": [[126, "urbanlc-model-baseline-mssbaseline"]], "urbanlc.model.baseline.MSSBaseline.build_model": [[127, "urbanlc-model-baseline-mssbaseline-build-model"]], "urbanlc.model.baseline.MSSBaseline.construct_transform_map": [[128, "urbanlc-model-baseline-mssbaseline-construct-transform-map"]], "urbanlc.model.baseline.MSSBaseline.infer": [[129, "urbanlc-model-baseline-mssbaseline-infer"]], "urbanlc.model.baseline.MSSBaseline.load_model": [[130, "urbanlc-model-baseline-mssbaseline-load-model"]], "urbanlc.model.baseline.MSSBaseline.retrieve_images": [[131, "urbanlc-model-baseline-mssbaseline-retrieve-images"]], "urbanlc.model.baseline.MSSBaseline.save_model": [[132, "urbanlc-model-baseline-mssbaseline-save-model"]], "urbanlc.model.baseline.MSSBaseline.train": [[133, "urbanlc-model-baseline-mssbaseline-train"]], "urbanlc.model.baseline.MSSBaseline.transform_pipeline": [[134, "urbanlc-model-baseline-mssbaseline-transform-pipeline"]], "urbanlc.model.baseline.MSSBaseline.update_transform_map": [[135, "urbanlc-model-baseline-mssbaseline-update-transform-map"]], "urbanlc.model.baseline.MSSBaseline.validate": [[136, "urbanlc-model-baseline-mssbaseline-validate"]], "urbanlc.model.baseline.OLI_TIRSBaseline": [[137, "urbanlc-model-baseline-oli-tirsbaseline"]], "urbanlc.model.baseline.OLI_TIRSBaseline.build_model": [[138, "urbanlc-model-baseline-oli-tirsbaseline-build-model"]], "urbanlc.model.baseline.OLI_TIRSBaseline.construct_transform_map": [[139, "urbanlc-model-baseline-oli-tirsbaseline-construct-transform-map"]], "urbanlc.model.baseline.OLI_TIRSBaseline.infer": [[140, "urbanlc-model-baseline-oli-tirsbaseline-infer"]], "urbanlc.model.baseline.OLI_TIRSBaseline.load_model": [[141, "urbanlc-model-baseline-oli-tirsbaseline-load-model"]], "urbanlc.model.baseline.OLI_TIRSBaseline.retrieve_images": [[142, "urbanlc-model-baseline-oli-tirsbaseline-retrieve-images"]], "urbanlc.model.baseline.OLI_TIRSBaseline.save_model": [[143, "urbanlc-model-baseline-oli-tirsbaseline-save-model"]], "urbanlc.model.baseline.OLI_TIRSBaseline.train": [[144, "urbanlc-model-baseline-oli-tirsbaseline-train"]], "urbanlc.model.baseline.OLI_TIRSBaseline.transform_pipeline": [[145, "urbanlc-model-baseline-oli-tirsbaseline-transform-pipeline"]], "urbanlc.model.baseline.OLI_TIRSBaseline.update_transform_map": [[146, "urbanlc-model-baseline-oli-tirsbaseline-update-transform-map"]], "urbanlc.model.baseline.OLI_TIRSBaseline.validate": [[147, "urbanlc-model-baseline-oli-tirsbaseline-validate"]], "urbanlc.model.baseline.TMBaseline": [[148, "urbanlc-model-baseline-tmbaseline"]], "urbanlc.model.baseline.TMBaseline.build_model": [[149, "urbanlc-model-baseline-tmbaseline-build-model"]], "urbanlc.model.baseline.TMBaseline.construct_transform_map": [[150, "urbanlc-model-baseline-tmbaseline-construct-transform-map"]], "urbanlc.model.baseline.TMBaseline.infer": [[151, "urbanlc-model-baseline-tmbaseline-infer"]], "urbanlc.model.baseline.TMBaseline.load_model": [[152, "urbanlc-model-baseline-tmbaseline-load-model"]], "urbanlc.model.baseline.TMBaseline.retrieve_images": [[153, "urbanlc-model-baseline-tmbaseline-retrieve-images"]], "urbanlc.model.baseline.TMBaseline.save_model": [[154, "urbanlc-model-baseline-tmbaseline-save-model"]], "urbanlc.model.baseline.TMBaseline.train": [[155, "urbanlc-model-baseline-tmbaseline-train"]], "urbanlc.model.baseline.TMBaseline.transform_pipeline": [[156, "urbanlc-model-baseline-tmbaseline-transform-pipeline"]], "urbanlc.model.baseline.TMBaseline.update_transform_map": [[157, "urbanlc-model-baseline-tmbaseline-update-transform-map"]], "urbanlc.model.baseline.TMBaseline.validate": [[158, "urbanlc-model-baseline-tmbaseline-validate"]], "urbanlc.model.dataloader.CustomRasterDataset": [[160, "urbanlc-model-dataloader-customrasterdataset"]], "urbanlc.model.dataloader.CustomRasterDataset.all_bands": [[161, "urbanlc-model-dataloader-customrasterdataset-all-bands"]], "urbanlc.model.dataloader.CustomRasterDataset.bounds": [[162, "urbanlc-model-dataloader-customrasterdataset-bounds"]], "urbanlc.model.dataloader.CustomRasterDataset.cmap": [[163, "urbanlc-model-dataloader-customrasterdataset-cmap"]], "urbanlc.model.dataloader.CustomRasterDataset.crs": [[164, "urbanlc-model-dataloader-customrasterdataset-crs"]], "urbanlc.model.dataloader.CustomRasterDataset.date_format": [[165, "urbanlc-model-dataloader-customrasterdataset-date-format"]], "urbanlc.model.dataloader.CustomRasterDataset.filename_glob": [[166, "urbanlc-model-dataloader-customrasterdataset-filename-glob"]], "urbanlc.model.dataloader.CustomRasterDataset.filename_regex": [[167, "urbanlc-model-dataloader-customrasterdataset-filename-regex"]], "urbanlc.model.dataloader.CustomRasterDataset.is_image": [[168, "urbanlc-model-dataloader-customrasterdataset-is-image"]], "urbanlc.model.dataloader.CustomRasterDataset.rgb_bands": [[169, "urbanlc-model-dataloader-customrasterdataset-rgb-bands"]], "urbanlc.model.dataloader.CustomRasterDataset.separate_files": [[170, "urbanlc-model-dataloader-customrasterdataset-separate-files"]], "urbanlc.model.dataloader.ESA2021": [[171, "urbanlc-model-dataloader-esa2021"]], "urbanlc.model.dataloader.ESA2021.all_bands": [[172, "urbanlc-model-dataloader-esa2021-all-bands"]], "urbanlc.model.dataloader.ESA2021.bounds": [[173, "urbanlc-model-dataloader-esa2021-bounds"]], "urbanlc.model.dataloader.ESA2021.cmap": [[174, "urbanlc-model-dataloader-esa2021-cmap"]], "urbanlc.model.dataloader.ESA2021.crs": [[175, "urbanlc-model-dataloader-esa2021-crs"]], "urbanlc.model.dataloader.ESA2021.date_format": [[176, "urbanlc-model-dataloader-esa2021-date-format"]], "urbanlc.model.dataloader.ESA2021.filename_glob": [[177, "urbanlc-model-dataloader-esa2021-filename-glob"]], "urbanlc.model.dataloader.ESA2021.filename_regex": [[178, "urbanlc-model-dataloader-esa2021-filename-regex"]], "urbanlc.model.dataloader.ESA2021.is_image": [[179, "urbanlc-model-dataloader-esa2021-is-image"]], "urbanlc.model.dataloader.ESA2021.rgb_bands": [[180, "urbanlc-model-dataloader-esa2021-rgb-bands"]], "urbanlc.model.dataloader.ESA2021.separate_files": [[181, "urbanlc-model-dataloader-esa2021-separate-files"]], "urbanlc.model.dataloader.Landsat": [[182, "urbanlc-model-dataloader-landsat"]], "urbanlc.model.dataloader.Landsat.MSS": [[183, "urbanlc-model-dataloader-landsat-mss"]], "urbanlc.model.dataloader.Landsat.OLITIRS": [[184, "urbanlc-model-dataloader-landsat-olitirs"]], "urbanlc.model.dataloader.Landsat.TM": [[185, "urbanlc-model-dataloader-landsat-tm"]], "urbanlc.model.dataloader.Landsat.all_bands": [[186, "urbanlc-model-dataloader-landsat-all-bands"]], "urbanlc.model.dataloader.Landsat.bounds": [[187, "urbanlc-model-dataloader-landsat-bounds"]], "urbanlc.model.dataloader.Landsat.cmap": [[188, "urbanlc-model-dataloader-landsat-cmap"]], "urbanlc.model.dataloader.Landsat.crs": [[189, "urbanlc-model-dataloader-landsat-crs"]], "urbanlc.model.dataloader.Landsat.date_format": [[190, "urbanlc-model-dataloader-landsat-date-format"]], "urbanlc.model.dataloader.Landsat.filename_glob": [[191, "urbanlc-model-dataloader-landsat-filename-glob"]], "urbanlc.model.dataloader.Landsat.filename_regex": [[192, "urbanlc-model-dataloader-landsat-filename-regex"]], "urbanlc.model.dataloader.Landsat.is_image": [[193, "urbanlc-model-dataloader-landsat-is-image"]], "urbanlc.model.dataloader.Landsat.rgb_bands": [[194, "urbanlc-model-dataloader-landsat-rgb-bands"]], "urbanlc.model.dataloader.Landsat.separate_files": [[195, "urbanlc-model-dataloader-landsat-separate-files"]], "urbanlc.model.dataloader.get_dataloader": [[196, "urbanlc-model-dataloader-get-dataloader"]], "urbanlc.model.dataloader.parse_paths": [[197, "urbanlc-model-dataloader-parse-paths"]], "urbanlc.model.deep_learning.DeepLearningLCC": [[199, "urbanlc-model-deep-learning-deeplearninglcc"]], "urbanlc.model.deep_learning.DeepLearningLCC.build_model": [[200, "urbanlc-model-deep-learning-deeplearninglcc-build-model"]], "urbanlc.model.deep_learning.DeepLearningLCC.construct_transform_map": [[201, "urbanlc-model-deep-learning-deeplearninglcc-construct-transform-map"]], "urbanlc.model.deep_learning.DeepLearningLCC.denormalize_class": [[202, "urbanlc-model-deep-learning-deeplearninglcc-denormalize-class"]], "urbanlc.model.deep_learning.DeepLearningLCC.get_metrics": [[203, "urbanlc-model-deep-learning-deeplearninglcc-get-metrics"]], "urbanlc.model.deep_learning.DeepLearningLCC.infer": [[204, "urbanlc-model-deep-learning-deeplearninglcc-infer"]], "urbanlc.model.deep_learning.DeepLearningLCC.load_model": [[205, "urbanlc-model-deep-learning-deeplearninglcc-load-model"]], "urbanlc.model.deep_learning.DeepLearningLCC.normalize_class": [[206, "urbanlc-model-deep-learning-deeplearninglcc-normalize-class"]], "urbanlc.model.deep_learning.DeepLearningLCC.save_model": [[207, "urbanlc-model-deep-learning-deeplearninglcc-save-model"]], "urbanlc.model.deep_learning.DeepLearningLCC.set_device": [[208, "urbanlc-model-deep-learning-deeplearninglcc-set-device"]], "urbanlc.model.deep_learning.DeepLearningLCC.setup_trainer": [[209, "urbanlc-model-deep-learning-deeplearninglcc-setup-trainer"]], "urbanlc.model.deep_learning.DeepLearningLCC.to": [[210, "urbanlc-model-deep-learning-deeplearninglcc-to"]], "urbanlc.model.deep_learning.DeepLearningLCC.train": [[211, "urbanlc-model-deep-learning-deeplearninglcc-train"]], "urbanlc.model.deep_learning.DeepLearningLCC.train_one_epoch": [[212, "urbanlc-model-deep-learning-deeplearninglcc-train-one-epoch"]], "urbanlc.model.deep_learning.DeepLearningLCC.validate": [[213, "urbanlc-model-deep-learning-deeplearninglcc-validate"]], "urbanlc.model.deep_learning.MSSDeepLearning": [[214, "urbanlc-model-deep-learning-mssdeeplearning"]], "urbanlc.model.deep_learning.MSSDeepLearning.build_model": [[215, "urbanlc-model-deep-learning-mssdeeplearning-build-model"]], "urbanlc.model.deep_learning.MSSDeepLearning.construct_transform_map": [[216, "urbanlc-model-deep-learning-mssdeeplearning-construct-transform-map"]], "urbanlc.model.deep_learning.MSSDeepLearning.denormalize_class": [[217, "urbanlc-model-deep-learning-mssdeeplearning-denormalize-class"]], "urbanlc.model.deep_learning.MSSDeepLearning.get_metrics": [[218, "urbanlc-model-deep-learning-mssdeeplearning-get-metrics"]], "urbanlc.model.deep_learning.MSSDeepLearning.infer": [[219, "urbanlc-model-deep-learning-mssdeeplearning-infer"]], "urbanlc.model.deep_learning.MSSDeepLearning.load_model": [[220, "urbanlc-model-deep-learning-mssdeeplearning-load-model"]], "urbanlc.model.deep_learning.MSSDeepLearning.normalize_class": [[221, "urbanlc-model-deep-learning-mssdeeplearning-normalize-class"]], "urbanlc.model.deep_learning.MSSDeepLearning.save_model": [[222, "urbanlc-model-deep-learning-mssdeeplearning-save-model"]], "urbanlc.model.deep_learning.MSSDeepLearning.set_device": [[223, "urbanlc-model-deep-learning-mssdeeplearning-set-device"]], "urbanlc.model.deep_learning.MSSDeepLearning.setup_trainer": [[224, "urbanlc-model-deep-learning-mssdeeplearning-setup-trainer"]], "urbanlc.model.deep_learning.MSSDeepLearning.to": [[225, "urbanlc-model-deep-learning-mssdeeplearning-to"]], "urbanlc.model.deep_learning.MSSDeepLearning.train": [[226, "urbanlc-model-deep-learning-mssdeeplearning-train"]], "urbanlc.model.deep_learning.MSSDeepLearning.train_one_epoch": [[227, "urbanlc-model-deep-learning-mssdeeplearning-train-one-epoch"]], "urbanlc.model.deep_learning.MSSDeepLearning.validate": [[228, "urbanlc-model-deep-learning-mssdeeplearning-validate"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning": [[229, "urbanlc-model-deep-learning-olitirsdeeplearning"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.build_model": [[230, "urbanlc-model-deep-learning-olitirsdeeplearning-build-model"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.construct_transform_map": [[231, "urbanlc-model-deep-learning-olitirsdeeplearning-construct-transform-map"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.denormalize_class": [[232, "urbanlc-model-deep-learning-olitirsdeeplearning-denormalize-class"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.get_metrics": [[233, "urbanlc-model-deep-learning-olitirsdeeplearning-get-metrics"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.infer": [[234, "urbanlc-model-deep-learning-olitirsdeeplearning-infer"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.load_model": [[235, "urbanlc-model-deep-learning-olitirsdeeplearning-load-model"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.normalize_class": [[236, "urbanlc-model-deep-learning-olitirsdeeplearning-normalize-class"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.save_model": [[237, "urbanlc-model-deep-learning-olitirsdeeplearning-save-model"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.set_device": [[238, "urbanlc-model-deep-learning-olitirsdeeplearning-set-device"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.setup_trainer": [[239, "urbanlc-model-deep-learning-olitirsdeeplearning-setup-trainer"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.to": [[240, "urbanlc-model-deep-learning-olitirsdeeplearning-to"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.train": [[241, "urbanlc-model-deep-learning-olitirsdeeplearning-train"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.train_one_epoch": [[242, "urbanlc-model-deep-learning-olitirsdeeplearning-train-one-epoch"]], "urbanlc.model.deep_learning.OLITIRSDeepLearning.validate": [[243, "urbanlc-model-deep-learning-olitirsdeeplearning-validate"]], "urbanlc.model.deep_learning.TMDeepLearning": [[244, "urbanlc-model-deep-learning-tmdeeplearning"]], "urbanlc.model.deep_learning.TMDeepLearning.build_model": [[245, "urbanlc-model-deep-learning-tmdeeplearning-build-model"]], "urbanlc.model.deep_learning.TMDeepLearning.construct_transform_map": [[246, "urbanlc-model-deep-learning-tmdeeplearning-construct-transform-map"]], "urbanlc.model.deep_learning.TMDeepLearning.denormalize_class": [[247, "urbanlc-model-deep-learning-tmdeeplearning-denormalize-class"]], "urbanlc.model.deep_learning.TMDeepLearning.get_metrics": [[248, "urbanlc-model-deep-learning-tmdeeplearning-get-metrics"]], "urbanlc.model.deep_learning.TMDeepLearning.infer": [[249, "urbanlc-model-deep-learning-tmdeeplearning-infer"]], "urbanlc.model.deep_learning.TMDeepLearning.load_model": [[250, "urbanlc-model-deep-learning-tmdeeplearning-load-model"]], "urbanlc.model.deep_learning.TMDeepLearning.normalize_class": [[251, "urbanlc-model-deep-learning-tmdeeplearning-normalize-class"]], "urbanlc.model.deep_learning.TMDeepLearning.save_model": [[252, "urbanlc-model-deep-learning-tmdeeplearning-save-model"]], "urbanlc.model.deep_learning.TMDeepLearning.set_device": [[253, "urbanlc-model-deep-learning-tmdeeplearning-set-device"]], "urbanlc.model.deep_learning.TMDeepLearning.setup_trainer": [[254, "urbanlc-model-deep-learning-tmdeeplearning-setup-trainer"]], "urbanlc.model.deep_learning.TMDeepLearning.to": [[255, "urbanlc-model-deep-learning-tmdeeplearning-to"]], "urbanlc.model.deep_learning.TMDeepLearning.train": [[256, "urbanlc-model-deep-learning-tmdeeplearning-train"]], "urbanlc.model.deep_learning.TMDeepLearning.train_one_epoch": [[257, "urbanlc-model-deep-learning-tmdeeplearning-train-one-epoch"]], "urbanlc.model.deep_learning.TMDeepLearning.validate": [[258, "urbanlc-model-deep-learning-tmdeeplearning-validate"]], "urbanlc.model.download.download_model": [[260, "urbanlc-model-download-download-model"]], "urbanlc.model.pipeline_transforms.AppendBUI": [[262, "urbanlc-model-pipeline-transforms-appendbui"]], "urbanlc.model.pipeline_transforms.AppendBUI.T_destination": [[263, "urbanlc-model-pipeline-transforms-appendbui-t-destination"]], "urbanlc.model.pipeline_transforms.AppendBUI.add_module": [[264, "urbanlc-model-pipeline-transforms-appendbui-add-module"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply": [[265, "urbanlc-model-pipeline-transforms-appendbui-apply"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_func": [[266, "urbanlc-model-pipeline-transforms-appendbui-apply-func"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform": [[267, "urbanlc-model-pipeline-transforms-appendbui-apply-non-transform"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_box": [[268, "urbanlc-model-pipeline-transforms-appendbui-apply-non-transform-box"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_boxes": [[269, "urbanlc-model-pipeline-transforms-appendbui-apply-non-transform-boxes"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_class": [[270, "urbanlc-model-pipeline-transforms-appendbui-apply-non-transform-class"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_keypoint": [[271, "urbanlc-model-pipeline-transforms-appendbui-apply-non-transform-keypoint"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_non_transform_mask": [[272, "urbanlc-model-pipeline-transforms-appendbui-apply-non-transform-mask"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform": [[273, "urbanlc-model-pipeline-transforms-appendbui-apply-transform"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_box": [[274, "urbanlc-model-pipeline-transforms-appendbui-apply-transform-box"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_boxes": [[275, "urbanlc-model-pipeline-transforms-appendbui-apply-transform-boxes"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_class": [[276, "urbanlc-model-pipeline-transforms-appendbui-apply-transform-class"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_keypoint": [[277, "urbanlc-model-pipeline-transforms-appendbui-apply-transform-keypoint"]], "urbanlc.model.pipeline_transforms.AppendBUI.apply_transform_mask": [[278, "urbanlc-model-pipeline-transforms-appendbui-apply-transform-mask"]], "urbanlc.model.pipeline_transforms.AppendBUI.bfloat16": [[279, "urbanlc-model-pipeline-transforms-appendbui-bfloat16"]], "urbanlc.model.pipeline_transforms.AppendBUI.buffers": [[280, "urbanlc-model-pipeline-transforms-appendbui-buffers"]], "urbanlc.model.pipeline_transforms.AppendBUI.children": [[281, "urbanlc-model-pipeline-transforms-appendbui-children"]], "urbanlc.model.pipeline_transforms.AppendBUI.compute_transformation": [[282, "urbanlc-model-pipeline-transforms-appendbui-compute-transformation"]], "urbanlc.model.pipeline_transforms.AppendBUI.cpu": [[283, "urbanlc-model-pipeline-transforms-appendbui-cpu"]], "urbanlc.model.pipeline_transforms.AppendBUI.cuda": [[284, "urbanlc-model-pipeline-transforms-appendbui-cuda"]], "urbanlc.model.pipeline_transforms.AppendBUI.double": [[285, "urbanlc-model-pipeline-transforms-appendbui-double"]], "urbanlc.model.pipeline_transforms.AppendBUI.dump_patches": [[286, "urbanlc-model-pipeline-transforms-appendbui-dump-patches"]], "urbanlc.model.pipeline_transforms.AppendBUI.eval": [[287, "urbanlc-model-pipeline-transforms-appendbui-eval"]], "urbanlc.model.pipeline_transforms.AppendBUI.extra_repr": [[288, "urbanlc-model-pipeline-transforms-appendbui-extra-repr"]], "urbanlc.model.pipeline_transforms.AppendBUI.float": [[289, "urbanlc-model-pipeline-transforms-appendbui-float"]], "urbanlc.model.pipeline_transforms.AppendBUI.forward": [[290, "urbanlc-model-pipeline-transforms-appendbui-forward"]], "urbanlc.model.pipeline_transforms.AppendBUI.forward_parameters": [[291, "urbanlc-model-pipeline-transforms-appendbui-forward-parameters"]], "urbanlc.model.pipeline_transforms.AppendBUI.generate_parameters": [[292, "urbanlc-model-pipeline-transforms-appendbui-generate-parameters"]], "urbanlc.model.pipeline_transforms.AppendBUI.generate_transformation_matrix": [[293, "urbanlc-model-pipeline-transforms-appendbui-generate-transformation-matrix"]], "urbanlc.model.pipeline_transforms.AppendBUI.get_buffer": [[294, "urbanlc-model-pipeline-transforms-appendbui-get-buffer"]], "urbanlc.model.pipeline_transforms.AppendBUI.get_extra_state": [[295, "urbanlc-model-pipeline-transforms-appendbui-get-extra-state"]], "urbanlc.model.pipeline_transforms.AppendBUI.get_parameter": [[296, "urbanlc-model-pipeline-transforms-appendbui-get-parameter"]], "urbanlc.model.pipeline_transforms.AppendBUI.get_submodule": [[297, "urbanlc-model-pipeline-transforms-appendbui-get-submodule"]], "urbanlc.model.pipeline_transforms.AppendBUI.half": [[298, "urbanlc-model-pipeline-transforms-appendbui-half"]], "urbanlc.model.pipeline_transforms.AppendBUI.identity_matrix": [[299, "urbanlc-model-pipeline-transforms-appendbui-identity-matrix"]], "urbanlc.model.pipeline_transforms.AppendBUI.inverse_boxes": [[300, "urbanlc-model-pipeline-transforms-appendbui-inverse-boxes"]], "urbanlc.model.pipeline_transforms.AppendBUI.inverse_classes": [[301, "urbanlc-model-pipeline-transforms-appendbui-inverse-classes"]], "urbanlc.model.pipeline_transforms.AppendBUI.inverse_inputs": [[302, "urbanlc-model-pipeline-transforms-appendbui-inverse-inputs"]], "urbanlc.model.pipeline_transforms.AppendBUI.inverse_keypoints": [[303, "urbanlc-model-pipeline-transforms-appendbui-inverse-keypoints"]], "urbanlc.model.pipeline_transforms.AppendBUI.inverse_masks": [[304, "urbanlc-model-pipeline-transforms-appendbui-inverse-masks"]], "urbanlc.model.pipeline_transforms.AppendBUI.ipu": [[305, "urbanlc-model-pipeline-transforms-appendbui-ipu"]], "urbanlc.model.pipeline_transforms.AppendBUI.load_state_dict": [[306, "urbanlc-model-pipeline-transforms-appendbui-load-state-dict"]], "urbanlc.model.pipeline_transforms.AppendBUI.modules": [[307, "urbanlc-model-pipeline-transforms-appendbui-modules"]], "urbanlc.model.pipeline_transforms.AppendBUI.named_buffers": [[308, "urbanlc-model-pipeline-transforms-appendbui-named-buffers"]], "urbanlc.model.pipeline_transforms.AppendBUI.named_children": [[309, "urbanlc-model-pipeline-transforms-appendbui-named-children"]], "urbanlc.model.pipeline_transforms.AppendBUI.named_modules": [[310, "urbanlc-model-pipeline-transforms-appendbui-named-modules"]], "urbanlc.model.pipeline_transforms.AppendBUI.named_parameters": [[311, "urbanlc-model-pipeline-transforms-appendbui-named-parameters"]], "urbanlc.model.pipeline_transforms.AppendBUI.parameters": [[312, "urbanlc-model-pipeline-transforms-appendbui-parameters"]], "urbanlc.model.pipeline_transforms.AppendBUI.register_backward_hook": [[313, "urbanlc-model-pipeline-transforms-appendbui-register-backward-hook"]], "urbanlc.model.pipeline_transforms.AppendBUI.register_buffer": [[314, "urbanlc-model-pipeline-transforms-appendbui-register-buffer"]], "urbanlc.model.pipeline_transforms.AppendBUI.register_forward_hook": [[315, "urbanlc-model-pipeline-transforms-appendbui-register-forward-hook"]], "urbanlc.model.pipeline_transforms.AppendBUI.register_forward_pre_hook": [[316, "urbanlc-model-pipeline-transforms-appendbui-register-forward-pre-hook"]], "urbanlc.model.pipeline_transforms.AppendBUI.register_full_backward_hook": [[317, "urbanlc-model-pipeline-transforms-appendbui-register-full-backward-hook"]], "urbanlc.model.pipeline_transforms.AppendBUI.register_load_state_dict_post_hook": [[318, "urbanlc-model-pipeline-transforms-appendbui-register-load-state-dict-post-hook"]], "urbanlc.model.pipeline_transforms.AppendBUI.register_module": [[319, "urbanlc-model-pipeline-transforms-appendbui-register-module"]], "urbanlc.model.pipeline_transforms.AppendBUI.register_parameter": [[320, "urbanlc-model-pipeline-transforms-appendbui-register-parameter"]], "urbanlc.model.pipeline_transforms.AppendBUI.requires_grad_": [[321, "urbanlc-model-pipeline-transforms-appendbui-requires-grad"]], "urbanlc.model.pipeline_transforms.AppendBUI.set_extra_state": [[322, "urbanlc-model-pipeline-transforms-appendbui-set-extra-state"]], "urbanlc.model.pipeline_transforms.AppendBUI.set_rng_device_and_dtype": [[323, "urbanlc-model-pipeline-transforms-appendbui-set-rng-device-and-dtype"]], "urbanlc.model.pipeline_transforms.AppendBUI.share_memory": [[324, "urbanlc-model-pipeline-transforms-appendbui-share-memory"]], "urbanlc.model.pipeline_transforms.AppendBUI.state_dict": [[325, "urbanlc-model-pipeline-transforms-appendbui-state-dict"]], "urbanlc.model.pipeline_transforms.AppendBUI.to": [[326, "urbanlc-model-pipeline-transforms-appendbui-to"]], "urbanlc.model.pipeline_transforms.AppendBUI.to_empty": [[327, "urbanlc-model-pipeline-transforms-appendbui-to-empty"]], "urbanlc.model.pipeline_transforms.AppendBUI.train": [[328, "urbanlc-model-pipeline-transforms-appendbui-train"]], "urbanlc.model.pipeline_transforms.AppendBUI.transform_boxes": [[329, "urbanlc-model-pipeline-transforms-appendbui-transform-boxes"]], "urbanlc.model.pipeline_transforms.AppendBUI.transform_classes": [[330, "urbanlc-model-pipeline-transforms-appendbui-transform-classes"]], "urbanlc.model.pipeline_transforms.AppendBUI.transform_inputs": [[331, "urbanlc-model-pipeline-transforms-appendbui-transform-inputs"]], "urbanlc.model.pipeline_transforms.AppendBUI.transform_keypoints": [[332, "urbanlc-model-pipeline-transforms-appendbui-transform-keypoints"]], "urbanlc.model.pipeline_transforms.AppendBUI.transform_masks": [[333, "urbanlc-model-pipeline-transforms-appendbui-transform-masks"]], "urbanlc.model.pipeline_transforms.AppendBUI.transform_matrix": [[334, "urbanlc-model-pipeline-transforms-appendbui-transform-matrix"]], "urbanlc.model.pipeline_transforms.AppendBUI.transform_output_tensor": [[335, "urbanlc-model-pipeline-transforms-appendbui-transform-output-tensor"]], "urbanlc.model.pipeline_transforms.AppendBUI.transform_tensor": [[336, "urbanlc-model-pipeline-transforms-appendbui-transform-tensor"]], "urbanlc.model.pipeline_transforms.AppendBUI.type": [[337, "urbanlc-model-pipeline-transforms-appendbui-type"]], "urbanlc.model.pipeline_transforms.AppendBUI.validate_tensor": [[338, "urbanlc-model-pipeline-transforms-appendbui-validate-tensor"]], "urbanlc.model.pipeline_transforms.AppendBUI.xpu": [[339, "urbanlc-model-pipeline-transforms-appendbui-xpu"]], "urbanlc.model.pipeline_transforms.AppendBUI.zero_grad": [[340, "urbanlc-model-pipeline-transforms-appendbui-zero-grad"]], "urbanlc.model.pipeline_transforms.LandsatTransformer": [[341, "urbanlc-model-pipeline-transforms-landsattransformer"]], "urbanlc.model.pipeline_transforms.LandsatTransformer.calculate_statistics": [[342, "urbanlc-model-pipeline-transforms-landsattransformer-calculate-statistics"]], "urbanlc.model.pipeline_transforms.LandsatTransformer.transform": [[343, "urbanlc-model-pipeline-transforms-landsattransformer-transform"]], "urbanlc.model.pipeline_transforms.MSSTransformer": [[344, "urbanlc-model-pipeline-transforms-msstransformer"]], "urbanlc.model.pipeline_transforms.MSSTransformer.calculate_statistics": [[345, "urbanlc-model-pipeline-transforms-msstransformer-calculate-statistics"]], "urbanlc.model.pipeline_transforms.MSSTransformer.transform": [[346, "urbanlc-model-pipeline-transforms-msstransformer-transform"]], "urbanlc.model.pipeline_transforms.OLITIRSTransformer": [[347, "urbanlc-model-pipeline-transforms-olitirstransformer"]], "urbanlc.model.pipeline_transforms.OLITIRSTransformer.calculate_statistics": [[348, "urbanlc-model-pipeline-transforms-olitirstransformer-calculate-statistics"]], "urbanlc.model.pipeline_transforms.OLITIRSTransformer.transform": [[349, "urbanlc-model-pipeline-transforms-olitirstransformer-transform"]], "urbanlc.model.pipeline_transforms.TMTransformer": [[350, "urbanlc-model-pipeline-transforms-tmtransformer"]], "urbanlc.model.pipeline_transforms.TMTransformer.calculate_statistics": [[351, "urbanlc-model-pipeline-transforms-tmtransformer-calculate-statistics"]], "urbanlc.model.pipeline_transforms.TMTransformer.transform": [[352, "urbanlc-model-pipeline-transforms-tmtransformer-transform"]], "urbanlc.model.pipeline_transforms.compute_BUI": [[353, "urbanlc-model-pipeline-transforms-compute-bui"]], "urbanlc.model.pipeline_transforms.compute_NDBI": [[354, "urbanlc-model-pipeline-transforms-compute-ndbi"]], "urbanlc.model.pipeline_transforms.compute_NDVI": [[355, "urbanlc-model-pipeline-transforms-compute-ndvi"]], "urbanlc.model.pipeline_transforms.compute_NDWI": [[356, "urbanlc-model-pipeline-transforms-compute-ndwi"]], "urbanlc.model.pipeline_transforms.mix_patch": [[357, "urbanlc-model-pipeline-transforms-mix-patch"]], "urbanlc.model.pipeline_transforms.rand_bbox": [[358, "urbanlc-model-pipeline-transforms-rand-bbox"]], "urbanlc.model.train_utils.combine_prediction": [[360, "urbanlc-model-train-utils-combine-prediction"]], "urbanlc.model.train_utils.load_checkpoint": [[361, "urbanlc-model-train-utils-load-checkpoint"]], "urbanlc.model.train_utils.save_checkpoint": [[362, "urbanlc-model-train-utils-save-checkpoint"]], "urbanlc.model.train_utils.segment_satelite_image": [[363, "urbanlc-model-train-utils-segment-satelite-image"]], "urbanlc.model.train_utils.set_seed": [[364, "urbanlc-model-train-utils-set-seed"]], "urbanlc.utils.export_geotiff": [[366, "urbanlc-utils-export-geotiff"]], "urbanlc.utils.open_at_scale": [[367, "urbanlc-utils-open-at-scale"]], "urbanlc.utils.open_at_size": [[368, "urbanlc-utils-open-at-size"]], "Getting Started": [[369, "getting-started"]], "Downloading Landsat data": [[369, "downloading-landsat-data"]], "Predicting land cover maps": [[369, "predicting-land-cover-maps"]], "Visualizing results": [[369, "visualizing-results"]], "UrbanLC reference documentation": [[370, "urbanlc-reference-documentation"]], "Introduction": [[370, "introduction"]], "Installation": [[370, "installation"]], "Disclaimer": [[370, "disclaimer"]], "Table of Content": [[370, "table-of-content"]], "API documentation": [[370, null]], "Test": [[372, "test"]], "References": [[23, "references"]], "UrbanLC": [[23, "urbanlc"]], "Other related citations": [[23, "other-related-citations"]], "Visit us": [[23, "visit-us"]]}, "indexentries": {}})